CCS PCM C Compiler, Version 4.104, 5967               03-set-23 17:46

               Filename: C:\Users\Admin\Desktop\ESTCB\1º Semetrite\MI\MNprojeto\miniprojMI\lab 3.lst

               ROM used: 3679 words (45%)
                         Largest free fragment is 2048
               RAM used: 67 (18%) at main() level
                         72 (20%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  MOVLW  0C
0001:  MOVWF  0A
0002:  GOTO   451
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... /* 
.................... Sistema de Rega Automatizado para 3 Zonas de Rega- este sistema irá controlar a hora e o tempo de rega de 3 zonas diferentes em simultâneo ou. 
.................... Os valores da hora e do tempo desejados serão introduzidos por botões de pressão.  
.................... Este miniprojecto terá um LCD, 3 valvulas de água, botões de pressão, teclados e sistema de 
.................... alimentação autonomo. 
....................  
.................... */ 
....................  
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc =10 
.................... #fuses NOWDT,HS, NOPUT, NOPROTECT, NODEBUG, NOLVP, NOCPD, NOWRT, BROWNOUT 
....................  
.................... #use delay(clock=20000000) 
*
0064:  MOVLW  60
0065:  MOVWF  04
0066:  BCF    03.7
0067:  MOVF   00,W
0068:  BTFSC  03.2
0069:  GOTO   077
006A:  MOVLW  06
006B:  MOVWF  78
006C:  CLRF   77
006D:  DECFSZ 77,F
006E:  GOTO   06D
006F:  DECFSZ 78,F
0070:  GOTO   06C
0071:  MOVLW  7B
0072:  MOVWF  77
0073:  DECFSZ 77,F
0074:  GOTO   073
0075:  DECFSZ 00,F
0076:  GOTO   06A
0077:  RETURN
.................... #use rs232(baud = 9600, xmit = PIN_C6, rcv = PIN_C7, parity = n, bits =8) // paridade conta os numeros dos 1 
....................  
....................  
.................... #define RS     PIN_E0 
.................... #define ENABLE PIN_E1 
.................... #define WDT_18MS 
....................  
....................  
....................                                             // Variaveis Globais 
.................... int16 caracter, instrucao; 
.................... int16 contador=0, horas=0, minutos=0, segundos = 0; 
....................    int16 hu=0, hd=0, mu=0, md=0, su=0, sd=0;  
....................    char tecla; 
....................  
....................                            // variaveis de definição da hora da rega 
....................    int dhz1=2, uhz1=3, dmz1=5, umz1=9; // variáveis de zona 1 
....................    int dhz2=2, uhz2=3, dmz2=5, umz2=9; // variáveis de zona 2 
....................    int dhz3=2, uhz3=3, dmz3=5, umz3=9; // variáveis de zona 3 
....................     
....................                         // variaveis da definição de tempo de rega 
....................    int16 mintZ1=2, mintZ2=2, mintZ3=2; 
....................                       // variaveis de acerto das horas       
....................    int hacdh, hacuh, hacdm, hacum; 
....................           
....................  
....................  
....................  
.................... //rotina de interrupção Interna com o timer 0 
.................... #int_rtcc 
.................... void rtcc_interrup(){ 
....................  
.................... contador++; 
*
002F:  INCF   2B,F
0030:  BTFSC  03.2
0031:  INCF   2C,F
.................... if(contador == 8333) // 1s = 1/10u 
0032:  MOVF   2B,W
0033:  SUBLW  8D
0034:  BTFSS  03.2
0035:  GOTO   060
0036:  MOVF   2C,W
0037:  SUBLW  20
0038:  BTFSS  03.2
0039:  GOTO   060
.................... { 
.................... contador = 0; 
003A:  CLRF   2C
003B:  CLRF   2B
.................... segundos ++; 
003C:  INCF   31,F
003D:  BTFSC  03.2
003E:  INCF   32,F
.................... if(segundos > 59){ 
003F:  MOVF   32,F
0040:  BTFSS  03.2
0041:  GOTO   046
0042:  MOVF   31,W
0043:  SUBLW  3B
0044:  BTFSC  03.0
0045:  GOTO   04B
.................... minutos++; 
0046:  INCF   2F,F
0047:  BTFSC  03.2
0048:  INCF   30,F
.................... segundos = 0; 
0049:  CLRF   32
004A:  CLRF   31
.................... } 
.................... if(minutos >59){ 
004B:  MOVF   30,F
004C:  BTFSS  03.2
004D:  GOTO   052
004E:  MOVF   2F,W
004F:  SUBLW  3B
0050:  BTFSC  03.0
0051:  GOTO   057
.................... horas++; 
0052:  INCF   2D,F
0053:  BTFSC  03.2
0054:  INCF   2E,F
.................... minutos = 0; 
0055:  CLRF   30
0056:  CLRF   2F
.................... } 
.................... if(horas > 23) 
0057:  MOVF   2E,F
0058:  BTFSS  03.2
0059:  GOTO   05E
005A:  MOVF   2D,W
005B:  SUBLW  17
005C:  BTFSC  03.0
005D:  GOTO   060
.................... horas = 0; 
005E:  CLRF   2E
005F:  CLRF   2D
....................  
....................     
....................  
.................... }//fim do if 
....................  
.................... }// fim da rotina 
....................  
....................  
....................  
....................                                               // Prototipagens das funçoes do programa 
.................... // funçao ativa(Enable) 
....................  
0060:  BCF    0B.2
0061:  BCF    0A.3
0062:  BCF    0A.4
0063:  GOTO   01B
.................... void activa(){ 
.................... output_high(ENABLE); 
*
0078:  BSF    03.5
0079:  BCF    09.1
007A:  BCF    03.5
007B:  BSF    09.1
.................... delay_ms(20); 
007C:  MOVLW  14
007D:  MOVWF  60
007E:  CALL   064
.................... output_low(ENABLE); 
007F:  BSF    03.5
0080:  BCF    09.1
0081:  BCF    03.5
0082:  BCF    09.1
.................... } 
0083:  RETURN
.................... // funçao transfere caracter 
.................... void transfere_carac(int carac){ 
.................... output_high(RS); 
*
00CF:  BSF    03.5
00D0:  BCF    09.0
00D1:  BCF    03.5
00D2:  BSF    09.0
.................... output_d(carac); 
00D3:  BSF    03.5
00D4:  CLRF   08
00D5:  BCF    03.5
00D6:  MOVF   5F,W
00D7:  MOVWF  08
.................... activa(); 
00D8:  CALL   078
.................... } 
00D9:  RETURN
.................... // funçao transfere instruçao 
.................... void transfere_inst(int inst){ 
.................... output_low(RS); 
*
0084:  BSF    03.5
0085:  BCF    09.0
0086:  BCF    03.5
0087:  BCF    09.0
.................... output_d(inst); 
0088:  BSF    03.5
0089:  CLRF   08
008A:  BCF    03.5
008B:  MOVF   5F,W
008C:  MOVWF  08
.................... activa(); 
008D:  CALL   078
.................... } 
008E:  RETURN
.................... // funçao que inicializa lcd 
.................... void ini_lcd(){ 
.................... //lcd_load (instrucao, 0, 16); 
.................... instrucao = 56; // 8bits 2linhas 
008F:  CLRF   2A
0090:  MOVLW  38
0091:  MOVWF  29
.................... transfere_inst(instrucao); 
0092:  MOVF   29,W
0093:  MOVWF  5F
0094:  CALL   084
.................... instrucao = 1; // Limpa display 
0095:  CLRF   2A
0096:  MOVLW  01
0097:  MOVWF  29
.................... transfere_inst(instrucao); 
0098:  MOVF   29,W
0099:  MOVWF  5F
009A:  CALL   084
.................... instrucao = 12; 
009B:  CLRF   2A
009C:  MOVLW  0C
009D:  MOVWF  29
.................... transfere_inst(instrucao); 
009E:  MOVF   29,W
009F:  MOVWF  5F
00A0:  CALL   084
.................... instrucao = 2; 
00A1:  CLRF   2A
00A2:  MOVLW  02
00A3:  MOVWF  29
.................... transfere_inst(instrucao); 
00A4:  MOVF   29,W
00A5:  MOVWF  5F
00A6:  CALL   084
....................  
.................... } 
00A7:  BSF    0A.3
00A8:  BCF    0A.4
00A9:  GOTO   4A6 (RETURN)
....................                                                                   // prototipagem das funções secundarias 
....................    
....................   void fun_horas(void); // função que controla horas 
....................   int menu(void); // menu do programa 
....................   void hacerto(void); //acerto das horas (horas e minutos) 
....................   void def_hregaZ1(void); // define a hora da rega da 1º zona 
....................   void def_hregaZ2(void); // define a hora da rega da 2º zona 
....................   void def_hregaZ3(void); // define a hora da rega da 3º zona 
....................   void ler_tecla(void); // tecla uso no programa 
....................    
....................  
....................  
....................  
....................  
....................                                                                  // funçao principal do programa 
.................... void main() 
.................... {  
*
0C51:  CLRF   04
0C52:  BCF    03.7
0C53:  MOVLW  1F
0C54:  ANDWF  03,F
0C55:  MOVLW  81
0C56:  BSF    03.5
0C57:  MOVWF  19
0C58:  MOVLW  A6
0C59:  MOVWF  18
0C5A:  MOVLW  90
0C5B:  BCF    03.5
0C5C:  MOVWF  18
0C5D:  CLRF   2C
0C5E:  CLRF   2B
0C5F:  CLRF   2E
0C60:  CLRF   2D
0C61:  CLRF   30
0C62:  CLRF   2F
0C63:  CLRF   32
0C64:  CLRF   31
0C65:  CLRF   34
0C66:  CLRF   33
0C67:  CLRF   36
0C68:  CLRF   35
0C69:  CLRF   38
0C6A:  CLRF   37
0C6B:  CLRF   3A
0C6C:  CLRF   39
0C6D:  CLRF   3C
0C6E:  CLRF   3B
0C6F:  CLRF   3E
0C70:  CLRF   3D
0C71:  MOVLW  02
0C72:  MOVWF  40
0C73:  MOVLW  03
0C74:  MOVWF  41
0C75:  MOVLW  05
0C76:  MOVWF  42
0C77:  MOVLW  09
0C78:  MOVWF  43
0C79:  MOVLW  02
0C7A:  MOVWF  44
0C7B:  MOVLW  03
0C7C:  MOVWF  45
0C7D:  MOVLW  05
0C7E:  MOVWF  46
0C7F:  MOVLW  09
0C80:  MOVWF  47
0C81:  MOVLW  02
0C82:  MOVWF  48
0C83:  MOVLW  03
0C84:  MOVWF  49
0C85:  MOVLW  05
0C86:  MOVWF  4A
0C87:  MOVLW  09
0C88:  MOVWF  4B
0C89:  CLRF   4D
0C8A:  MOVLW  02
0C8B:  MOVWF  4C
0C8C:  CLRF   4F
0C8D:  MOVWF  4E
0C8E:  CLRF   51
0C8F:  MOVWF  50
0C90:  BSF    03.5
0C91:  BSF    1F.0
0C92:  BSF    1F.1
0C93:  BSF    1F.2
0C94:  BCF    1F.3
0C95:  MOVLW  07
0C96:  MOVWF  1C
*
0C9A:  CLRF   58
0C9B:  CLRF   59
0C9C:  CLRF   5A
....................      // declaraçao de variaveis locais 
....................  char i; 
....................  int z1=0, z2=0, z3=0; 
....................   
....................     port_b_pullups(0xF0); 
0C9D:  BSF    03.5
0C9E:  BCF    01.7
....................     set_tris_b(0xF0);// 0 saídas e 1 entradas 
0C9F:  MOVLW  F0
0CA0:  MOVWF  06
....................     set_tris_d(0x00); 
0CA1:  MOVLW  00
0CA2:  MOVWF  08
....................     ini_lcd(); 
0CA3:  BCF    0A.3
0CA4:  BCF    03.5
0CA5:  GOTO   08F
0CA6:  BSF    0A.3
....................      
....................        // Ativaçao (setup) e identificaçao dos portos 
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_2);// 8 bits a resolução é (256*2*4)20000000 = 102u   
0CA7:  BSF    03.5
0CA8:  MOVF   01,W
0CA9:  ANDLW  C0
0CAA:  MOVWF  01
....................    setup_adc_ports(AN0); 
0CAB:  BCF    1F.0
0CAC:  BSF    1F.1
0CAD:  BSF    1F.2
0CAE:  BSF    1F.3
....................    setup_adc(ADC_clock_internal); 
0CAF:  BCF    1F.6
0CB0:  BCF    03.5
0CB1:  BSF    1F.6
0CB2:  BSF    1F.7
0CB3:  BSF    03.5
0CB4:  BSF    1F.7
0CB5:  BCF    03.5
0CB6:  BSF    1F.0
....................    enable_interrupts(int_rtcc); 
0CB7:  BSF    0B.5
....................    enable_interrupts(global);    
0CB8:  MOVLW  C0
0CB9:  IORWF  0B,F
....................     
....................                           // Leitura dos estado anterior das variáveis guardadas no EEPROM nos seus respetivos endereços 
....................                   // Zona 1 
....................    dhz1 = read_EEPROM (00); 
0CBA:  BSF    03.6
0CBB:  CLRF   0D
0CBC:  BSF    03.5
0CBD:  BCF    0C.7
0CBE:  BSF    0C.0
0CBF:  BCF    03.5
0CC0:  MOVF   0C,W
0CC1:  BCF    03.6
0CC2:  MOVWF  40
....................    uhz1 = read_EEPROM (01); 
0CC3:  MOVLW  01
0CC4:  BSF    03.6
0CC5:  MOVWF  0D
0CC6:  BSF    03.5
0CC7:  BCF    0C.7
0CC8:  BSF    0C.0
0CC9:  BCF    03.5
0CCA:  MOVF   0C,W
0CCB:  BCF    03.6
0CCC:  MOVWF  41
....................    dmz1 = read_EEPROM (02); 
0CCD:  MOVLW  02
0CCE:  BSF    03.6
0CCF:  MOVWF  0D
0CD0:  BSF    03.5
0CD1:  BCF    0C.7
0CD2:  BSF    0C.0
0CD3:  BCF    03.5
0CD4:  MOVF   0C,W
0CD5:  BCF    03.6
0CD6:  MOVWF  42
....................    umz1 = read_EEPROM (03); 
0CD7:  MOVLW  03
0CD8:  BSF    03.6
0CD9:  MOVWF  0D
0CDA:  BSF    03.5
0CDB:  BCF    0C.7
0CDC:  BSF    0C.0
0CDD:  BCF    03.5
0CDE:  MOVF   0C,W
0CDF:  BCF    03.6
0CE0:  MOVWF  43
....................    mintZ1 = read_EEPROM (04);    
0CE1:  MOVLW  04
0CE2:  BSF    03.6
0CE3:  MOVWF  0D
0CE4:  BSF    03.5
0CE5:  BCF    0C.7
0CE6:  BSF    0C.0
0CE7:  BCF    03.5
0CE8:  MOVF   0C,W
0CE9:  BCF    03.6
0CEA:  CLRF   4D
0CEB:  MOVWF  4C
....................                   // Zona 2 
....................    dhz2 = read_EEPROM (05); 
0CEC:  MOVLW  05
0CED:  BSF    03.6
0CEE:  MOVWF  0D
0CEF:  BSF    03.5
0CF0:  BCF    0C.7
0CF1:  BSF    0C.0
0CF2:  BCF    03.5
0CF3:  MOVF   0C,W
0CF4:  BCF    03.6
0CF5:  MOVWF  44
....................    uhz2 = read_EEPROM (06); 
0CF6:  MOVLW  06
0CF7:  BSF    03.6
0CF8:  MOVWF  0D
0CF9:  BSF    03.5
0CFA:  BCF    0C.7
0CFB:  BSF    0C.0
0CFC:  BCF    03.5
0CFD:  MOVF   0C,W
0CFE:  BCF    03.6
0CFF:  MOVWF  45
....................    dmz2 = read_EEPROM (07); 
0D00:  MOVLW  07
0D01:  BSF    03.6
0D02:  MOVWF  0D
0D03:  BSF    03.5
0D04:  BCF    0C.7
0D05:  BSF    0C.0
0D06:  BCF    03.5
0D07:  MOVF   0C,W
0D08:  BCF    03.6
0D09:  MOVWF  46
....................    umz2 = read_EEPROM (10);  // endereço 8 e 9? são endereços reservados  
0D0A:  MOVLW  0A
0D0B:  BSF    03.6
0D0C:  MOVWF  0D
0D0D:  BSF    03.5
0D0E:  BCF    0C.7
0D0F:  BSF    0C.0
0D10:  BCF    03.5
0D11:  MOVF   0C,W
0D12:  BCF    03.6
0D13:  MOVWF  47
....................    mintZ2 = read_EEPROM (11); 
0D14:  MOVLW  0B
0D15:  BSF    03.6
0D16:  MOVWF  0D
0D17:  BSF    03.5
0D18:  BCF    0C.7
0D19:  BSF    0C.0
0D1A:  BCF    03.5
0D1B:  MOVF   0C,W
0D1C:  BCF    03.6
0D1D:  CLRF   4F
0D1E:  MOVWF  4E
....................                   // Zona 3 
....................    dhz3 = read_EEPROM (12); 
0D1F:  MOVLW  0C
0D20:  BSF    03.6
0D21:  MOVWF  0D
0D22:  BSF    03.5
0D23:  BCF    0C.7
0D24:  BSF    0C.0
0D25:  BCF    03.5
0D26:  MOVF   0C,W
0D27:  BCF    03.6
0D28:  MOVWF  48
....................    uhz3 = read_EEPROM (13); 
0D29:  MOVLW  0D
0D2A:  BSF    03.6
0D2B:  MOVWF  0D
0D2C:  BSF    03.5
0D2D:  BCF    0C.7
0D2E:  BSF    0C.0
0D2F:  BCF    03.5
0D30:  MOVF   0C,W
0D31:  BCF    03.6
0D32:  MOVWF  49
....................    dmz3 = read_EEPROM (14); 
0D33:  MOVLW  0E
0D34:  BSF    03.6
0D35:  MOVWF  0D
0D36:  BSF    03.5
0D37:  BCF    0C.7
0D38:  BSF    0C.0
0D39:  BCF    03.5
0D3A:  MOVF   0C,W
0D3B:  BCF    03.6
0D3C:  MOVWF  4A
....................    umz3 = read_EEPROM (15); 
0D3D:  MOVLW  0F
0D3E:  BSF    03.6
0D3F:  MOVWF  0D
0D40:  BSF    03.5
0D41:  BCF    0C.7
0D42:  BSF    0C.0
0D43:  BCF    03.5
0D44:  MOVF   0C,W
0D45:  BCF    03.6
0D46:  MOVWF  4B
....................    mintZ3 = read_EEPROM (16); 
0D47:  MOVLW  10
0D48:  BSF    03.6
0D49:  MOVWF  0D
0D4A:  BSF    03.5
0D4B:  BCF    0C.7
0D4C:  BSF    0C.0
0D4D:  BCF    03.5
0D4E:  MOVF   0C,W
0D4F:  BCF    03.6
0D50:  CLRF   51
0D51:  MOVWF  50
....................  
....................  
.................... // ciclo infinito de programa 
....................  
....................   while (1) 
....................    { 
....................    
....................     fun_horas(); // Invoca a função fun_horas 
0D52:  BCF    0A.3
0D53:  GOTO   0DA
0D54:  BSF    0A.3
....................      
....................    instrucao = 192; 
0D55:  CLRF   2A
0D56:  MOVLW  C0
0D57:  MOVWF  29
....................    transfere_inst(instrucao); 
0D58:  MOVF   29,W
0D59:  MOVWF  5F
0D5A:  BCF    0A.3
0D5B:  CALL   084
0D5C:  BSF    0A.3
....................    caracter = 'A'; // Representa o menu do programa 
0D5D:  CLRF   28
0D5E:  MOVLW  41
0D5F:  MOVWF  27
....................    transfere_carac(caracter); 
0D60:  MOVF   27,W
0D61:  MOVWF  5F
0D62:  BCF    0A.3
0D63:  CALL   0CF
0D64:  BSF    0A.3
....................    instrucao = 194; 
0D65:  CLRF   2A
0D66:  MOVLW  C2
0D67:  MOVWF  29
....................    transfere_inst(instrucao); 
0D68:  MOVF   29,W
0D69:  MOVWF  5F
0D6A:  BCF    0A.3
0D6B:  CALL   084
0D6C:  BSF    0A.3
....................    caracter = 'E'; // Representa o menu do programa 
0D6D:  CLRF   28
0D6E:  MOVLW  45
0D6F:  MOVWF  27
....................    transfere_carac(caracter); 
0D70:  MOVF   27,W
0D71:  MOVWF  5F
0D72:  BCF    0A.3
0D73:  CALL   0CF
0D74:  BSF    0A.3
....................     
....................     
....................     
....................     
....................    // Tecla do menu e aceroto das horas 
....................            //hacerto() 
....................     tecla = '#'; 
0D75:  MOVLW  23
0D76:  MOVWF  3F
....................   output_high(pin_b0); 
0D77:  BSF    03.5
0D78:  BCF    06.0
0D79:  BCF    03.5
0D7A:  BSF    06.0
....................   output_low(pin_b1); 
0D7B:  BSF    03.5
0D7C:  BCF    06.1
0D7D:  BCF    03.5
0D7E:  BCF    06.1
....................   output_high(pin_b2); 
0D7F:  BSF    03.5
0D80:  BCF    06.2
0D81:  BCF    03.5
0D82:  BSF    06.2
....................   output_high(pin_b3); 
0D83:  BSF    03.5
0D84:  BCF    06.3
0D85:  BCF    03.5
0D86:  BSF    06.3
....................      while((input(pin_b7)==0) && (input(pin_b7)==0) && (input(pin_b7)==0)){ 
0D87:  BSF    03.5
0D88:  BSF    06.7
0D89:  BCF    03.5
0D8A:  BTFSC  06.7
0D8B:  GOTO   599
0D8C:  BSF    03.5
0D8D:  BSF    06.7
0D8E:  BCF    03.5
0D8F:  BTFSC  06.7
0D90:  GOTO   599
0D91:  BSF    03.5
0D92:  BSF    06.7
0D93:  BCF    03.5
0D94:  BTFSC  06.7
0D95:  GOTO   599
....................    tecla='E'; 
0D96:  MOVLW  45
0D97:  MOVWF  3F
....................     } 
0D98:  GOTO   587
....................     
....................     // menu() 
....................   output_high(pin_b0); 
0D99:  BSF    03.5
0D9A:  BCF    06.0
0D9B:  BCF    03.5
0D9C:  BSF    06.0
....................   output_high(pin_b1); 
0D9D:  BSF    03.5
0D9E:  BCF    06.1
0D9F:  BCF    03.5
0DA0:  BSF    06.1
....................   output_high(pin_b2); 
0DA1:  BSF    03.5
0DA2:  BCF    06.2
0DA3:  BCF    03.5
0DA4:  BSF    06.2
....................   output_low(pin_b3); 
0DA5:  BSF    03.5
0DA6:  BCF    06.3
0DA7:  BCF    03.5
0DA8:  BCF    06.3
....................  
....................   while((input(pin_b4)==0) && (input(pin_b4)==0) && (input(pin_b4)==0)){ 
0DA9:  BSF    03.5
0DAA:  BSF    06.4
0DAB:  BCF    03.5
0DAC:  BTFSC  06.4
0DAD:  GOTO   5BB
0DAE:  BSF    03.5
0DAF:  BSF    06.4
0DB0:  BCF    03.5
0DB1:  BTFSC  06.4
0DB2:  GOTO   5BB
0DB3:  BSF    03.5
0DB4:  BSF    06.4
0DB5:  BCF    03.5
0DB6:  BTFSC  06.4
0DB7:  GOTO   5BB
....................    tecla='A'; 
0DB8:  MOVLW  41
0DB9:  MOVWF  3F
....................    }// fim de tecla do menu 
0DBA:  GOTO   5A9
....................        // invocação da função menu 
....................    if(tecla == 'A'){ 
0DBB:  MOVF   3F,W
0DBC:  SUBLW  41
0DBD:  BTFSS  03.2
0DBE:  GOTO   5C4
....................    i  = menu(); 
0DBF:  BCF    0A.3
0DC0:  GOTO   2D6
0DC1:  BSF    0A.3
0DC2:  MOVF   78,W
0DC3:  MOVWF  57
....................     
....................    }   
....................     
....................    // invocação da função hacerto 
....................    if(tecla == 'E'){ 
0DC4:  MOVF   3F,W
0DC5:  SUBLW  45
0DC6:  BTFSS  03.2
0DC7:  GOTO   5E5
....................       hacerto(); 
0DC8:  BCF    0A.3
0DC9:  GOTO   397
0DCA:  BSF    0A.3
....................        if(tecla == 'C'){ 
0DCB:  MOVF   3F,W
0DCC:  SUBLW  43
0DCD:  BTFSS  03.2
0DCE:  GOTO   5E5
....................         horas = (hacdh*10)+ hacuh; 
0DCF:  MOVF   52,W
0DD0:  MOVWF  5B
0DD1:  MOVLW  0A
0DD2:  MOVWF  5C
0DD3:  BCF    0A.3
0DD4:  CALL   449
0DD5:  BSF    0A.3
0DD6:  MOVF   53,W
0DD7:  ADDWF  78,W
0DD8:  MOVWF  2D
0DD9:  CLRF   2E
....................         minutos = (hacdm*10)+ hacum; 
0DDA:  MOVF   54,W
0DDB:  MOVWF  5B
0DDC:  MOVLW  0A
0DDD:  MOVWF  5C
0DDE:  BCF    0A.3
0DDF:  CALL   449
0DE0:  BSF    0A.3
0DE1:  MOVF   55,W
0DE2:  ADDWF  78,W
0DE3:  MOVWF  2F
0DE4:  CLRF   30
....................        }// fim de if de gravação da tecla 
....................    }// fim de hacerto 
....................     
....................     
....................      // As atulizações das horas de regas  
....................  
....................      if(tecla == '1' || tecla == '2' || tecla == '3'){ 
0DE5:  MOVF   3F,W
0DE6:  SUBLW  31
0DE7:  BTFSC  03.2
0DE8:  GOTO   5F1
0DE9:  MOVF   3F,W
0DEA:  SUBLW  32
0DEB:  BTFSC  03.2
0DEC:  GOTO   5F1
0DED:  MOVF   3F,W
0DEE:  SUBLW  33
0DEF:  BTFSS  03.2
0DF0:  GOTO   60C
....................      switch(i){ 
0DF1:  MOVF   57,W
0DF2:  XORLW  31
0DF3:  BTFSC  03.2
0DF4:  GOTO   5FC
0DF5:  XORLW  03
0DF6:  BTFSC  03.2
0DF7:  GOTO   600
0DF8:  XORLW  01
0DF9:  BTFSC  03.2
0DFA:  GOTO   602
0DFB:  GOTO   604
....................      case '1': // opção 1. Zona1 
....................         def_hregaZ1(); 
0DFC:  BCF    0A.3
0DFD:  GOTO   46E
0DFE:  BSF    0A.3
....................      break; 
0DFF:  GOTO   604
....................       
....................      case '2': // opção 2. Zona 2 
....................         def_hregaZ2(); 
0E00:  GOTO   000
....................       
....................      break; 
0E01:  GOTO   604
....................       
....................                                        // Tempo de rega para Zona 1 
....................      case '3': // opção 3 
....................         def_hregaZ3(); 
0E02:  GOTO   229
....................  
....................      break; 
0E03:  GOTO   604
....................     
....................       
....................       
....................      }//fim do switch 
....................      instrucao = 1; 
0E04:  CLRF   2A
0E05:  MOVLW  01
0E06:  MOVWF  29
....................      transfere_inst(instrucao); 
0E07:  MOVF   29,W
0E08:  MOVWF  5F
0E09:  BCF    0A.3
0E0A:  CALL   084
0E0B:  BSF    0A.3
....................       
....................       
....................   }// fim do if 
....................        
....................                                   // Controlo de rega da zona 1 
....................       
....................       if(hd == dhz1){ 
0E0C:  MOVF   40,W
0E0D:  SUBWF  35,W
0E0E:  BTFSS  03.2
0E0F:  GOTO   662
0E10:  MOVF   36,F
0E11:  BTFSS  03.2
0E12:  GOTO   662
....................          if(hu == uhz1){ 
0E13:  MOVF   41,W
0E14:  SUBWF  33,W
0E15:  BTFSS  03.2
0E16:  GOTO   662
0E17:  MOVF   34,F
0E18:  BTFSS  03.2
0E19:  GOTO   662
....................          if(md == dmz1){ 
0E1A:  MOVF   42,W
0E1B:  SUBWF  39,W
0E1C:  BTFSS  03.2
0E1D:  GOTO   662
0E1E:  MOVF   3A,F
0E1F:  BTFSS  03.2
0E20:  GOTO   662
....................          if(mu == umz1){ 
0E21:  MOVF   43,W
0E22:  SUBWF  37,W
0E23:  BTFSS  03.2
0E24:  GOTO   662
0E25:  MOVF   38,F
0E26:  BTFSS  03.2
0E27:  GOTO   662
....................          output_high(pin_A2); 
0E28:  BSF    03.5
0E29:  BCF    05.2
0E2A:  BCF    03.5
0E2B:  BSF    05.2
....................          z1=1; 
0E2C:  MOVLW  01
0E2D:  MOVWF  58
....................          instrucao = 139; 
0E2E:  CLRF   2A
0E2F:  MOVLW  8B
0E30:  MOVWF  29
....................          transfere_inst(instrucao); 
0E31:  MOVF   29,W
0E32:  MOVWF  5F
0E33:  BCF    0A.3
0E34:  CALL   084
0E35:  BSF    0A.3
....................          caracter = 'Z'; 
0E36:  CLRF   28
0E37:  MOVLW  5A
0E38:  MOVWF  27
....................          transfere_carac(caracter); 
0E39:  MOVF   27,W
0E3A:  MOVWF  5F
0E3B:  BCF    0A.3
0E3C:  CALL   0CF
0E3D:  BSF    0A.3
....................          caracter = '1'; 
0E3E:  CLRF   28
0E3F:  MOVLW  31
0E40:  MOVWF  27
....................          transfere_carac(caracter); 
0E41:  MOVF   27,W
0E42:  MOVWF  5F
0E43:  BCF    0A.3
0E44:  CALL   0CF
0E45:  BSF    0A.3
....................          caracter = 'O'; 
0E46:  CLRF   28
0E47:  MOVLW  4F
0E48:  MOVWF  27
....................          transfere_carac(caracter); 
0E49:  MOVF   27,W
0E4A:  MOVWF  5F
0E4B:  BCF    0A.3
0E4C:  CALL   0CF
0E4D:  BSF    0A.3
....................          caracter = 'n'; 
0E4E:  CLRF   28
0E4F:  MOVLW  6E
0E50:  MOVWF  27
....................          transfere_carac(caracter); 
0E51:  MOVF   27,W
0E52:  MOVWF  5F
0E53:  BCF    0A.3
0E54:  CALL   0CF
0E55:  BSF    0A.3
....................           caracter = mintZ1+48; 
0E56:  MOVLW  30
0E57:  ADDWF  4C,W
0E58:  MOVWF  27
0E59:  MOVF   4D,W
0E5A:  MOVWF  28
0E5B:  BTFSC  03.0
0E5C:  INCF   28,F
....................           transfere_carac(caracter); 
0E5D:  MOVF   27,W
0E5E:  MOVWF  5F
0E5F:  BCF    0A.3
0E60:  CALL   0CF
0E61:  BSF    0A.3
....................          }// 4º 
....................          }// 3º 
....................          }// 2º 
....................       }// 1º if  
....................        
....................       if(mu == umz1+mintZ1){ 
0E62:  MOVF   43,W
0E63:  ADDWF  4C,W
0E64:  MOVWF  78
0E65:  MOVF   4D,W
0E66:  MOVWF  7A
0E67:  BTFSC  03.0
0E68:  INCF   7A,F
0E69:  MOVF   78,W
0E6A:  SUBWF  37,W
0E6B:  BTFSS  03.2
0E6C:  GOTO   676
0E6D:  MOVF   7A,W
0E6E:  SUBWF  38,W
0E6F:  BTFSS  03.2
0E70:  GOTO   676
....................       output_low(pin_A2); 
0E71:  BSF    03.5
0E72:  BCF    05.2
0E73:  BCF    03.5
0E74:  BCF    05.2
....................       z1=0; 
0E75:  CLRF   58
....................           
....................       }// fim de if de low da z1 
....................        
....................       if(z1 == 0){ 
0E76:  MOVF   58,F
0E77:  BTFSS  03.2
0E78:  GOTO   6AD
....................          instrucao = 139; 
0E79:  CLRF   2A
0E7A:  MOVLW  8B
0E7B:  MOVWF  29
....................          transfere_inst(instrucao); 
0E7C:  MOVF   29,W
0E7D:  MOVWF  5F
0E7E:  BCF    0A.3
0E7F:  CALL   084
0E80:  BSF    0A.3
....................          caracter = 'Z'; 
0E81:  CLRF   28
0E82:  MOVLW  5A
0E83:  MOVWF  27
....................          transfere_carac(caracter); 
0E84:  MOVF   27,W
0E85:  MOVWF  5F
0E86:  BCF    0A.3
0E87:  CALL   0CF
0E88:  BSF    0A.3
....................          caracter = '1'; 
0E89:  CLRF   28
0E8A:  MOVLW  31
0E8B:  MOVWF  27
....................          transfere_carac(caracter); 
0E8C:  MOVF   27,W
0E8D:  MOVWF  5F
0E8E:  BCF    0A.3
0E8F:  CALL   0CF
0E90:  BSF    0A.3
....................          caracter = 'O'; 
0E91:  CLRF   28
0E92:  MOVLW  4F
0E93:  MOVWF  27
....................          transfere_carac(caracter); 
0E94:  MOVF   27,W
0E95:  MOVWF  5F
0E96:  BCF    0A.3
0E97:  CALL   0CF
0E98:  BSF    0A.3
....................          caracter = 'f'; 
0E99:  CLRF   28
0E9A:  MOVLW  66
0E9B:  MOVWF  27
....................          transfere_carac(caracter); 
0E9C:  MOVF   27,W
0E9D:  MOVWF  5F
0E9E:  BCF    0A.3
0E9F:  CALL   0CF
0EA0:  BSF    0A.3
....................           caracter = mintZ1+48; 
0EA1:  MOVLW  30
0EA2:  ADDWF  4C,W
0EA3:  MOVWF  27
0EA4:  MOVF   4D,W
0EA5:  MOVWF  28
0EA6:  BTFSC  03.0
0EA7:  INCF   28,F
....................           transfere_carac(caracter); 
0EA8:  MOVF   27,W
0EA9:  MOVWF  5F
0EAA:  BCF    0A.3
0EAB:  CALL   0CF
0EAC:  BSF    0A.3
....................           
....................           
....................       }// fim de if off 
....................        
....................        // Controlo de rega da zona 2 
....................        
....................       if(hd == dhz2){ 
0EAD:  MOVF   44,W
0EAE:  SUBWF  35,W
0EAF:  BTFSS  03.2
0EB0:  GOTO   703
0EB1:  MOVF   36,F
0EB2:  BTFSS  03.2
0EB3:  GOTO   703
....................          if(hu == uhz2){ 
0EB4:  MOVF   45,W
0EB5:  SUBWF  33,W
0EB6:  BTFSS  03.2
0EB7:  GOTO   703
0EB8:  MOVF   34,F
0EB9:  BTFSS  03.2
0EBA:  GOTO   703
....................          if(md == dmz2){ 
0EBB:  MOVF   46,W
0EBC:  SUBWF  39,W
0EBD:  BTFSS  03.2
0EBE:  GOTO   703
0EBF:  MOVF   3A,F
0EC0:  BTFSS  03.2
0EC1:  GOTO   703
....................          if(mu == umz2){ 
0EC2:  MOVF   47,W
0EC3:  SUBWF  37,W
0EC4:  BTFSS  03.2
0EC5:  GOTO   703
0EC6:  MOVF   38,F
0EC7:  BTFSS  03.2
0EC8:  GOTO   703
....................          output_high(pin_A3); 
0EC9:  BSF    03.5
0ECA:  BCF    05.3
0ECB:  BCF    03.5
0ECC:  BSF    05.3
....................           z2=1; 
0ECD:  MOVLW  01
0ECE:  MOVWF  59
....................          instrucao = 197; 
0ECF:  CLRF   2A
0ED0:  MOVLW  C5
0ED1:  MOVWF  29
....................          transfere_inst(instrucao); 
0ED2:  MOVF   29,W
0ED3:  MOVWF  5F
0ED4:  BCF    0A.3
0ED5:  CALL   084
0ED6:  BSF    0A.3
....................          caracter = 'Z'; 
0ED7:  CLRF   28
0ED8:  MOVLW  5A
0ED9:  MOVWF  27
....................          transfere_carac(caracter); 
0EDA:  MOVF   27,W
0EDB:  MOVWF  5F
0EDC:  BCF    0A.3
0EDD:  CALL   0CF
0EDE:  BSF    0A.3
....................          caracter = '2'; 
0EDF:  CLRF   28
0EE0:  MOVLW  32
0EE1:  MOVWF  27
....................          transfere_carac(caracter); 
0EE2:  MOVF   27,W
0EE3:  MOVWF  5F
0EE4:  BCF    0A.3
0EE5:  CALL   0CF
0EE6:  BSF    0A.3
....................          caracter = 'O'; 
0EE7:  CLRF   28
0EE8:  MOVLW  4F
0EE9:  MOVWF  27
....................          transfere_carac(caracter); 
0EEA:  MOVF   27,W
0EEB:  MOVWF  5F
0EEC:  BCF    0A.3
0EED:  CALL   0CF
0EEE:  BSF    0A.3
....................          caracter = 'n'; 
0EEF:  CLRF   28
0EF0:  MOVLW  6E
0EF1:  MOVWF  27
....................          transfere_carac(caracter); 
0EF2:  MOVF   27,W
0EF3:  MOVWF  5F
0EF4:  BCF    0A.3
0EF5:  CALL   0CF
0EF6:  BSF    0A.3
....................           caracter = mintZ2+48; 
0EF7:  MOVLW  30
0EF8:  ADDWF  4E,W
0EF9:  MOVWF  27
0EFA:  MOVF   4F,W
0EFB:  MOVWF  28
0EFC:  BTFSC  03.0
0EFD:  INCF   28,F
....................           transfere_carac(caracter); 
0EFE:  MOVF   27,W
0EFF:  MOVWF  5F
0F00:  BCF    0A.3
0F01:  CALL   0CF
0F02:  BSF    0A.3
....................          }// 4º 
....................          }// 3º 
....................          }// 2º 
....................       }// 1º if  
....................        
....................       if(mu == umz2+mintZ2){ 
0F03:  MOVF   47,W
0F04:  ADDWF  4E,W
0F05:  MOVWF  78
0F06:  MOVF   4F,W
0F07:  MOVWF  7A
0F08:  BTFSC  03.0
0F09:  INCF   7A,F
0F0A:  MOVF   78,W
0F0B:  SUBWF  37,W
0F0C:  BTFSS  03.2
0F0D:  GOTO   717
0F0E:  MOVF   7A,W
0F0F:  SUBWF  38,W
0F10:  BTFSS  03.2
0F11:  GOTO   717
....................       output_low(pin_A3); 
0F12:  BSF    03.5
0F13:  BCF    05.3
0F14:  BCF    03.5
0F15:  BCF    05.3
....................       z2 = 0; 
0F16:  CLRF   59
....................       } 
....................       if(z2 == 0){ 
0F17:  MOVF   59,F
0F18:  BTFSS  03.2
0F19:  GOTO   74E
....................          instrucao = 197; 
0F1A:  CLRF   2A
0F1B:  MOVLW  C5
0F1C:  MOVWF  29
....................          transfere_inst(instrucao); 
0F1D:  MOVF   29,W
0F1E:  MOVWF  5F
0F1F:  BCF    0A.3
0F20:  CALL   084
0F21:  BSF    0A.3
....................          caracter = 'Z'; 
0F22:  CLRF   28
0F23:  MOVLW  5A
0F24:  MOVWF  27
....................          transfere_carac(caracter); 
0F25:  MOVF   27,W
0F26:  MOVWF  5F
0F27:  BCF    0A.3
0F28:  CALL   0CF
0F29:  BSF    0A.3
....................          caracter = '2'; 
0F2A:  CLRF   28
0F2B:  MOVLW  32
0F2C:  MOVWF  27
....................          transfere_carac(caracter); 
0F2D:  MOVF   27,W
0F2E:  MOVWF  5F
0F2F:  BCF    0A.3
0F30:  CALL   0CF
0F31:  BSF    0A.3
....................          caracter = 'O'; 
0F32:  CLRF   28
0F33:  MOVLW  4F
0F34:  MOVWF  27
....................          transfere_carac(caracter); 
0F35:  MOVF   27,W
0F36:  MOVWF  5F
0F37:  BCF    0A.3
0F38:  CALL   0CF
0F39:  BSF    0A.3
....................          caracter = 'f'; 
0F3A:  CLRF   28
0F3B:  MOVLW  66
0F3C:  MOVWF  27
....................          transfere_carac(caracter); 
0F3D:  MOVF   27,W
0F3E:  MOVWF  5F
0F3F:  BCF    0A.3
0F40:  CALL   0CF
0F41:  BSF    0A.3
....................          caracter = mintZ2+48; 
0F42:  MOVLW  30
0F43:  ADDWF  4E,W
0F44:  MOVWF  27
0F45:  MOVF   4F,W
0F46:  MOVWF  28
0F47:  BTFSC  03.0
0F48:  INCF   28,F
....................          transfere_carac(caracter); 
0F49:  MOVF   27,W
0F4A:  MOVWF  5F
0F4B:  BCF    0A.3
0F4C:  CALL   0CF
0F4D:  BSF    0A.3
....................           
....................       }// fim de if off 
....................        
....................        
....................        // Controlo de rega da zona 3 
....................        
....................       if(hd == dhz3){ 
0F4E:  MOVF   48,W
0F4F:  SUBWF  35,W
0F50:  BTFSS  03.2
0F51:  GOTO   7A6
0F52:  MOVF   36,F
0F53:  BTFSS  03.2
0F54:  GOTO   7A6
....................          if(hu == uhz3){ 
0F55:  MOVF   49,W
0F56:  SUBWF  33,W
0F57:  BTFSS  03.2
0F58:  GOTO   7A6
0F59:  MOVF   34,F
0F5A:  BTFSS  03.2
0F5B:  GOTO   7A6
....................          if(md == dmz3){ 
0F5C:  MOVF   4A,W
0F5D:  SUBWF  39,W
0F5E:  BTFSS  03.2
0F5F:  GOTO   7A6
0F60:  MOVF   3A,F
0F61:  BTFSS  03.2
0F62:  GOTO   7A6
....................          if(mu == umz3){ 
0F63:  MOVF   4B,W
0F64:  SUBWF  37,W
0F65:  BTFSS  03.2
0F66:  GOTO   7A6
0F67:  MOVF   38,F
0F68:  BTFSS  03.2
0F69:  GOTO   7A6
....................          output_high(pin_C4); 
0F6A:  BCF    56.4
0F6B:  MOVF   56,W
0F6C:  BSF    03.5
0F6D:  MOVWF  07
0F6E:  BCF    03.5
0F6F:  BSF    07.4
....................          z3=1; 
0F70:  MOVLW  01
0F71:  MOVWF  5A
....................          instrucao = 203; 
0F72:  CLRF   2A
0F73:  MOVLW  CB
0F74:  MOVWF  29
....................          transfere_inst(instrucao); 
0F75:  MOVF   29,W
0F76:  MOVWF  5F
0F77:  BCF    0A.3
0F78:  CALL   084
0F79:  BSF    0A.3
....................          caracter = 'Z'; 
0F7A:  CLRF   28
0F7B:  MOVLW  5A
0F7C:  MOVWF  27
....................          transfere_carac(caracter); 
0F7D:  MOVF   27,W
0F7E:  MOVWF  5F
0F7F:  BCF    0A.3
0F80:  CALL   0CF
0F81:  BSF    0A.3
....................          caracter = '3'; 
0F82:  CLRF   28
0F83:  MOVLW  33
0F84:  MOVWF  27
....................          transfere_carac(caracter); 
0F85:  MOVF   27,W
0F86:  MOVWF  5F
0F87:  BCF    0A.3
0F88:  CALL   0CF
0F89:  BSF    0A.3
....................          caracter = 'O'; 
0F8A:  CLRF   28
0F8B:  MOVLW  4F
0F8C:  MOVWF  27
....................          transfere_carac(caracter); 
0F8D:  MOVF   27,W
0F8E:  MOVWF  5F
0F8F:  BCF    0A.3
0F90:  CALL   0CF
0F91:  BSF    0A.3
....................          caracter = 'n'; 
0F92:  CLRF   28
0F93:  MOVLW  6E
0F94:  MOVWF  27
....................          transfere_carac(caracter); 
0F95:  MOVF   27,W
0F96:  MOVWF  5F
0F97:  BCF    0A.3
0F98:  CALL   0CF
0F99:  BSF    0A.3
....................          caracter = mintZ3+48; 
0F9A:  MOVLW  30
0F9B:  ADDWF  50,W
0F9C:  MOVWF  27
0F9D:  MOVF   51,W
0F9E:  MOVWF  28
0F9F:  BTFSC  03.0
0FA0:  INCF   28,F
....................          transfere_carac(caracter); 
0FA1:  MOVF   27,W
0FA2:  MOVWF  5F
0FA3:  BCF    0A.3
0FA4:  CALL   0CF
0FA5:  BSF    0A.3
....................          }// 4º 
....................          }// 3º 
....................          }// 2º 
....................       }// 1º if  
....................        
....................       if(mu == umz3 + mintZ3){ 
0FA6:  MOVF   4B,W
0FA7:  ADDWF  50,W
0FA8:  MOVWF  78
0FA9:  MOVF   51,W
0FAA:  MOVWF  7A
0FAB:  BTFSC  03.0
0FAC:  INCF   7A,F
0FAD:  MOVF   78,W
0FAE:  SUBWF  37,W
0FAF:  BTFSS  03.2
0FB0:  GOTO   7BC
0FB1:  MOVF   7A,W
0FB2:  SUBWF  38,W
0FB3:  BTFSS  03.2
0FB4:  GOTO   7BC
....................       output_low(pin_C4); 
0FB5:  BCF    56.4
0FB6:  MOVF   56,W
0FB7:  BSF    03.5
0FB8:  MOVWF  07
0FB9:  BCF    03.5
0FBA:  BCF    07.4
....................       z3 = 0; 
0FBB:  CLRF   5A
....................       } 
....................       if(z3 == 0){ 
0FBC:  MOVF   5A,F
0FBD:  BTFSS  03.2
0FBE:  GOTO   7F3
....................          instrucao = 203; 
0FBF:  CLRF   2A
0FC0:  MOVLW  CB
0FC1:  MOVWF  29
....................          transfere_inst(instrucao); 
0FC2:  MOVF   29,W
0FC3:  MOVWF  5F
0FC4:  BCF    0A.3
0FC5:  CALL   084
0FC6:  BSF    0A.3
....................          caracter = 'Z'; 
0FC7:  CLRF   28
0FC8:  MOVLW  5A
0FC9:  MOVWF  27
....................          transfere_carac(caracter); 
0FCA:  MOVF   27,W
0FCB:  MOVWF  5F
0FCC:  BCF    0A.3
0FCD:  CALL   0CF
0FCE:  BSF    0A.3
....................          caracter = '3'; 
0FCF:  CLRF   28
0FD0:  MOVLW  33
0FD1:  MOVWF  27
....................          transfere_carac(caracter); 
0FD2:  MOVF   27,W
0FD3:  MOVWF  5F
0FD4:  BCF    0A.3
0FD5:  CALL   0CF
0FD6:  BSF    0A.3
....................          caracter = 'O'; 
0FD7:  CLRF   28
0FD8:  MOVLW  4F
0FD9:  MOVWF  27
....................          transfere_carac(caracter); 
0FDA:  MOVF   27,W
0FDB:  MOVWF  5F
0FDC:  BCF    0A.3
0FDD:  CALL   0CF
0FDE:  BSF    0A.3
....................          caracter = 'f'; 
0FDF:  CLRF   28
0FE0:  MOVLW  66
0FE1:  MOVWF  27
....................          transfere_carac(caracter); 
0FE2:  MOVF   27,W
0FE3:  MOVWF  5F
0FE4:  BCF    0A.3
0FE5:  CALL   0CF
0FE6:  BSF    0A.3
....................          caracter = mintZ3+48; 
0FE7:  MOVLW  30
0FE8:  ADDWF  50,W
0FE9:  MOVWF  27
0FEA:  MOVF   51,W
0FEB:  MOVWF  28
0FEC:  BTFSC  03.0
0FED:  INCF   28,F
....................          transfere_carac(caracter); 
0FEE:  MOVF   27,W
0FEF:  MOVWF  5F
0FF0:  BCF    0A.3
0FF1:  CALL   0CF
0FF2:  BSF    0A.3
....................           
....................       }// fim de if off 
....................  
....................  
....................  
....................  
....................  
....................    }// fim do while 1    
0FF3:  GOTO   552
.................... }// Fim do main 
....................  
....................  
....................                                                                 // Prototipagem das funções secundarias do programa 
....................                                   
....................  //  função horas 
.................... void fun_horas(){ 
....................  
0FF4:  SLEEP
....................       instrucao = 128; 
*
00DA:  CLRF   2A
00DB:  MOVLW  80
00DC:  MOVWF  29
....................       transfere_inst(instrucao); 
00DD:  MOVF   29,W
00DE:  MOVWF  5F
00DF:  CALL   084
....................                
....................               // horas 
....................       hd = horas/10; 
00E0:  MOVF   2E,W
00E1:  MOVWF  5C
00E2:  MOVF   2D,W
00E3:  MOVWF  5B
00E4:  CLRF   5E
00E5:  MOVLW  0A
00E6:  MOVWF  5D
00E7:  CALL   0AA
00E8:  MOVF   79,W
00E9:  MOVWF  36
00EA:  MOVF   78,W
00EB:  MOVWF  35
....................       caracter = hd+48; 
00EC:  MOVLW  30
00ED:  ADDWF  35,W
00EE:  MOVWF  27
00EF:  MOVF   36,W
00F0:  MOVWF  28
00F1:  BTFSC  03.0
00F2:  INCF   28,F
....................     transfere_carac(caracter); 
00F3:  MOVF   27,W
00F4:  MOVWF  5F
00F5:  CALL   0CF
....................       hu = horas%10; 
00F6:  MOVF   2E,W
00F7:  MOVWF  5C
00F8:  MOVF   2D,W
00F9:  MOVWF  5B
00FA:  CLRF   5E
00FB:  MOVLW  0A
00FC:  MOVWF  5D
00FD:  CALL   0AA
00FE:  MOVF   77,W
00FF:  MOVWF  33
0100:  MOVF   7A,W
0101:  MOVWF  34
....................       caracter = hu+48; 
0102:  MOVLW  30
0103:  ADDWF  33,W
0104:  MOVWF  27
0105:  MOVF   34,W
0106:  MOVWF  28
0107:  BTFSC  03.0
0108:  INCF   28,F
....................     transfere_carac(caracter); 
0109:  MOVF   27,W
010A:  MOVWF  5F
010B:  CALL   0CF
....................       caracter = ':'; 
010C:  CLRF   28
010D:  MOVLW  3A
010E:  MOVWF  27
....................     transfere_carac(caracter); 
010F:  MOVF   27,W
0110:  MOVWF  5F
0111:  CALL   0CF
....................           
....................          // minutos 
....................       md = minutos/10; 
0112:  MOVF   30,W
0113:  MOVWF  5C
0114:  MOVF   2F,W
0115:  MOVWF  5B
0116:  CLRF   5E
0117:  MOVLW  0A
0118:  MOVWF  5D
0119:  CALL   0AA
011A:  MOVF   79,W
011B:  MOVWF  3A
011C:  MOVF   78,W
011D:  MOVWF  39
....................       caracter = md+48; 
011E:  MOVLW  30
011F:  ADDWF  39,W
0120:  MOVWF  27
0121:  MOVF   3A,W
0122:  MOVWF  28
0123:  BTFSC  03.0
0124:  INCF   28,F
....................     transfere_carac(caracter); 
0125:  MOVF   27,W
0126:  MOVWF  5F
0127:  CALL   0CF
....................       mu = minutos%10;    
0128:  MOVF   30,W
0129:  MOVWF  5C
012A:  MOVF   2F,W
012B:  MOVWF  5B
012C:  CLRF   5E
012D:  MOVLW  0A
012E:  MOVWF  5D
012F:  CALL   0AA
0130:  MOVF   77,W
0131:  MOVWF  37
0132:  MOVF   7A,W
0133:  MOVWF  38
....................       caracter = mu+48; 
0134:  MOVLW  30
0135:  ADDWF  37,W
0136:  MOVWF  27
0137:  MOVF   38,W
0138:  MOVWF  28
0139:  BTFSC  03.0
013A:  INCF   28,F
....................     transfere_carac(caracter); 
013B:  MOVF   27,W
013C:  MOVWF  5F
013D:  CALL   0CF
....................      caracter = ':'; 
013E:  CLRF   28
013F:  MOVLW  3A
0140:  MOVWF  27
....................     transfere_carac(caracter); 
0141:  MOVF   27,W
0142:  MOVWF  5F
0143:  CALL   0CF
....................      
....................     // segundos 
....................    sd = segundos/10; 
0144:  MOVF   32,W
0145:  MOVWF  5C
0146:  MOVF   31,W
0147:  MOVWF  5B
0148:  CLRF   5E
0149:  MOVLW  0A
014A:  MOVWF  5D
014B:  CALL   0AA
014C:  MOVF   79,W
014D:  MOVWF  3E
014E:  MOVF   78,W
014F:  MOVWF  3D
....................    caracter = sd+48; 
0150:  MOVLW  30
0151:  ADDWF  3D,W
0152:  MOVWF  27
0153:  MOVF   3E,W
0154:  MOVWF  28
0155:  BTFSC  03.0
0156:  INCF   28,F
....................    transfere_carac(caracter); 
0157:  MOVF   27,W
0158:  MOVWF  5F
0159:  CALL   0CF
....................    su = segundos%10; 
015A:  MOVF   32,W
015B:  MOVWF  5C
015C:  MOVF   31,W
015D:  MOVWF  5B
015E:  CLRF   5E
015F:  MOVLW  0A
0160:  MOVWF  5D
0161:  CALL   0AA
0162:  MOVF   77,W
0163:  MOVWF  3B
0164:  MOVF   7A,W
0165:  MOVWF  3C
....................    caracter = su+48; 
0166:  MOVLW  30
0167:  ADDWF  3B,W
0168:  MOVWF  27
0169:  MOVF   3C,W
016A:  MOVWF  28
016B:  BTFSC  03.0
016C:  INCF   28,F
....................    transfere_carac(caracter); 
016D:  MOVF   27,W
016E:  MOVWF  5F
016F:  CALL   0CF
....................  
....................  
.................... } // fim da fun_horas 
0170:  BSF    0A.3
0171:  BCF    0A.4
0172:  GOTO   554 (RETURN)
....................  
....................  
....................  
.................... // função menu do programa 
.................... int menu(void){ 
....................  
.................... instrucao = 1;  // limpa lcd e manda o cursor para primeira posissão 
*
02D6:  CLRF   2A
02D7:  MOVLW  01
02D8:  MOVWF  29
.................... transfere_inst(instrucao); 
02D9:  MOVF   29,W
02DA:  MOVWF  5F
02DB:  CALL   084
.................... instrucao = 128;   
02DC:  CLRF   2A
02DD:  MOVLW  80
02DE:  MOVWF  29
.................... transfere_inst(instrucao); 
02DF:  MOVF   29,W
02E0:  MOVWF  5F
02E1:  CALL   084
....................  
....................  
.................... caracter = '1'; 
02E2:  CLRF   28
02E3:  MOVLW  31
02E4:  MOVWF  27
.................... transfere_carac(caracter); 
02E5:  MOVF   27,W
02E6:  MOVWF  5F
02E7:  CALL   0CF
.................... caracter = '-'; 
02E8:  CLRF   28
02E9:  MOVLW  2D
02EA:  MOVWF  27
.................... transfere_carac(caracter); 
02EB:  MOVF   27,W
02EC:  MOVWF  5F
02ED:  CALL   0CF
.................... caracter = ' '; 
02EE:  CLRF   28
02EF:  MOVLW  20
02F0:  MOVWF  27
.................... transfere_carac(caracter); 
02F1:  MOVF   27,W
02F2:  MOVWF  5F
02F3:  CALL   0CF
.................... caracter = 'Z'; 
02F4:  CLRF   28
02F5:  MOVLW  5A
02F6:  MOVWF  27
.................... transfere_carac(caracter); 
02F7:  MOVF   27,W
02F8:  MOVWF  5F
02F9:  CALL   0CF
.................... caracter = '1'; 
02FA:  CLRF   28
02FB:  MOVLW  31
02FC:  MOVWF  27
.................... transfere_carac(caracter); 
02FD:  MOVF   27,W
02FE:  MOVWF  5F
02FF:  CALL   0CF
.................... instrucao = 136; 
0300:  CLRF   2A
0301:  MOVLW  88
0302:  MOVWF  29
.................... transfere_inst(instrucao); 
0303:  MOVF   29,W
0304:  MOVWF  5F
0305:  CALL   084
.................... caracter = '2'; 
0306:  CLRF   28
0307:  MOVLW  32
0308:  MOVWF  27
.................... transfere_carac(caracter); 
0309:  MOVF   27,W
030A:  MOVWF  5F
030B:  CALL   0CF
.................... caracter = '-'; 
030C:  CLRF   28
030D:  MOVLW  2D
030E:  MOVWF  27
.................... transfere_carac(caracter); 
030F:  MOVF   27,W
0310:  MOVWF  5F
0311:  CALL   0CF
.................... caracter = ' '; 
0312:  CLRF   28
0313:  MOVLW  20
0314:  MOVWF  27
.................... transfere_carac(caracter); 
0315:  MOVF   27,W
0316:  MOVWF  5F
0317:  CALL   0CF
.................... caracter = 'Z'; 
0318:  CLRF   28
0319:  MOVLW  5A
031A:  MOVWF  27
.................... transfere_carac(caracter); 
031B:  MOVF   27,W
031C:  MOVWF  5F
031D:  CALL   0CF
.................... caracter = '2'; 
031E:  CLRF   28
031F:  MOVLW  32
0320:  MOVWF  27
.................... transfere_carac(caracter); 
0321:  MOVF   27,W
0322:  MOVWF  5F
0323:  CALL   0CF
....................  
....................  
.................... // linha 2 de lcd 
.................... instrucao = 192; 
0324:  CLRF   2A
0325:  MOVLW  C0
0326:  MOVWF  29
.................... transfere_inst(instrucao); 
0327:  MOVF   29,W
0328:  MOVWF  5F
0329:  CALL   084
....................  
.................... caracter = '3'; 
032A:  CLRF   28
032B:  MOVLW  33
032C:  MOVWF  27
.................... transfere_carac(caracter); 
032D:  MOVF   27,W
032E:  MOVWF  5F
032F:  CALL   0CF
.................... caracter = '-'; 
0330:  CLRF   28
0331:  MOVLW  2D
0332:  MOVWF  27
.................... transfere_carac(caracter); 
0333:  MOVF   27,W
0334:  MOVWF  5F
0335:  CALL   0CF
.................... caracter = ' '; 
0336:  CLRF   28
0337:  MOVLW  20
0338:  MOVWF  27
.................... transfere_carac(caracter); 
0339:  MOVF   27,W
033A:  MOVWF  5F
033B:  CALL   0CF
.................... caracter = 'Z'; 
033C:  CLRF   28
033D:  MOVLW  5A
033E:  MOVWF  27
.................... transfere_carac(caracter); 
033F:  MOVF   27,W
0340:  MOVWF  5F
0341:  CALL   0CF
.................... caracter = '3'; 
0342:  CLRF   28
0343:  MOVLW  33
0344:  MOVWF  27
.................... transfere_carac(caracter); 
0345:  MOVF   27,W
0346:  MOVWF  5F
0347:  CALL   0CF
.................... instrucao = 200; 
0348:  CLRF   2A
0349:  MOVLW  C8
034A:  MOVWF  29
.................... transfere_inst(instrucao); 
034B:  MOVF   29,W
034C:  MOVWF  5F
034D:  CALL   084
.................... caracter = 'B';                // back 'B' para sair do menu  
034E:  CLRF   28
034F:  MOVLW  42
0350:  MOVWF  27
.................... transfere_carac(caracter); 
0351:  MOVF   27,W
0352:  MOVWF  5F
0353:  CALL   0CF
.................... caracter = '-'; 
0354:  CLRF   28
0355:  MOVLW  2D
0356:  MOVWF  27
.................... transfere_carac(caracter); 
0357:  MOVF   27,W
0358:  MOVWF  5F
0359:  CALL   0CF
.................... caracter = ' '; 
035A:  CLRF   28
035B:  MOVLW  20
035C:  MOVWF  27
.................... transfere_carac(caracter); 
035D:  MOVF   27,W
035E:  MOVWF  5F
035F:  CALL   0CF
.................... caracter = 'S'; 
0360:  CLRF   28
0361:  MOVLW  53
0362:  MOVWF  27
.................... transfere_carac(caracter); 
0363:  MOVF   27,W
0364:  MOVWF  5F
0365:  CALL   0CF
.................... caracter = 'a'; 
0366:  CLRF   28
0367:  MOVLW  61
0368:  MOVWF  27
.................... transfere_carac(caracter); 
0369:  MOVF   27,W
036A:  MOVWF  5F
036B:  CALL   0CF
.................... caracter = 'i'; 
036C:  CLRF   28
036D:  MOVLW  69
036E:  MOVWF  27
.................... transfere_carac(caracter); 
036F:  MOVF   27,W
0370:  MOVWF  5F
0371:  CALL   0CF
.................... caracter = 'r'; 
0372:  CLRF   28
0373:  MOVLW  72
0374:  MOVWF  27
.................... transfere_carac(caracter); 
0375:  MOVF   27,W
0376:  MOVWF  5F
0377:  CALL   0CF
....................  
.................... // tecla de menu 
.................... do{ 
....................    ler_tecla(); 
0378:  CALL   173
....................     
.................... }while(tecla!='1' && tecla != '2' && tecla != '3' && tecla != 'B'); // fim do w 
0379:  MOVF   3F,W
037A:  SUBLW  31
037B:  BTFSC  03.2
037C:  GOTO   389
037D:  MOVF   3F,W
037E:  SUBLW  32
037F:  BTFSC  03.2
0380:  GOTO   389
0381:  MOVF   3F,W
0382:  SUBLW  33
0383:  BTFSC  03.2
0384:  GOTO   389
0385:  MOVF   3F,W
0386:  SUBLW  42
0387:  BTFSS  03.2
0388:  GOTO   378
.................... transfere_carac(tecla); 
0389:  MOVF   3F,W
038A:  MOVWF  5F
038B:  CALL   0CF
.................... instrucao = 1;  // limpa lcd e manda o cursor para primeira posissão 
038C:  CLRF   2A
038D:  MOVLW  01
038E:  MOVWF  29
.................... transfere_inst(instrucao);   
038F:  MOVF   29,W
0390:  MOVWF  5F
0391:  CALL   084
....................  
.................... return(tecla); 
0392:  MOVF   3F,W
0393:  MOVWF  78
.................... } // fim da função menu 
0394:  BSF    0A.3
0395:  BCF    0A.4
0396:  GOTO   5C1 (RETURN)
....................  
....................  
....................  
....................  //acerto das horas (horas e minutos) 
.................... void hacerto(){ 
....................  
....................     
....................      instrucao = 1;  // limpa lcd e manda o cursor para primeira posissão 
0397:  CLRF   2A
0398:  MOVLW  01
0399:  MOVWF  29
....................      transfere_inst(instrucao); 
039A:  MOVF   29,W
039B:  MOVWF  5F
039C:  CALL   084
....................      hacdh = horas/10; 
039D:  MOVF   2E,W
039E:  MOVWF  5C
039F:  MOVF   2D,W
03A0:  MOVWF  5B
03A1:  CLRF   5E
03A2:  MOVLW  0A
03A3:  MOVWF  5D
03A4:  CALL   0AA
03A5:  MOVF   78,W
03A6:  MOVWF  52
....................      hacuh = horas%10; 
03A7:  MOVF   2E,W
03A8:  MOVWF  5C
03A9:  MOVF   2D,W
03AA:  MOVWF  5B
03AB:  CLRF   5E
03AC:  MOVLW  0A
03AD:  MOVWF  5D
03AE:  CALL   0AA
03AF:  MOVF   77,W
03B0:  MOVWF  53
....................      hacdm = minutos/10; 
03B1:  MOVF   30,W
03B2:  MOVWF  5C
03B3:  MOVF   2F,W
03B4:  MOVWF  5B
03B5:  CLRF   5E
03B6:  MOVLW  0A
03B7:  MOVWF  5D
03B8:  CALL   0AA
03B9:  MOVF   78,W
03BA:  MOVWF  54
....................      hacum = minutos%10; 
03BB:  MOVF   30,W
03BC:  MOVWF  5C
03BD:  MOVF   2F,W
03BE:  MOVWF  5B
03BF:  CLRF   5E
03C0:  MOVLW  0A
03C1:  MOVWF  5D
03C2:  CALL   0AA
03C3:  MOVF   77,W
03C4:  MOVWF  55
....................    do{ 
....................     tecla = '#'; 
03C5:  MOVLW  23
03C6:  MOVWF  3F
....................     instrucao = 135; 
03C7:  CLRF   2A
03C8:  MOVLW  87
03C9:  MOVWF  29
....................     transfere_inst(instrucao); 
03CA:  MOVF   29,W
03CB:  MOVWF  5F
03CC:  CALL   084
....................      
....................      
....................     if(input(pin_C0)== 1){ 
03CD:  BSF    56.0
03CE:  MOVF   56,W
03CF:  BSF    03.5
03D0:  MOVWF  07
03D1:  BCF    03.5
03D2:  BTFSS  07.0
03D3:  GOTO   3D9
....................       delay_ms(100); 
03D4:  MOVLW  64
03D5:  MOVWF  60
03D6:  CALL   064
....................       hacdh = hacdh +1; 
03D7:  MOVLW  01
03D8:  ADDWF  52,F
....................       } 
....................       if(input(pin_C1)== 1){ 
03D9:  BSF    56.1
03DA:  MOVF   56,W
03DB:  BSF    03.5
03DC:  MOVWF  07
03DD:  BCF    03.5
03DE:  BTFSS  07.1
03DF:  GOTO   3E5
....................       delay_ms(100); 
03E0:  MOVLW  64
03E1:  MOVWF  60
03E2:  CALL   064
....................       hacuh = hacuh+1; 
03E3:  MOVLW  01
03E4:  ADDWF  53,F
....................       } 
....................       if(input(pin_C2)== 1){ 
03E5:  BSF    56.2
03E6:  MOVF   56,W
03E7:  BSF    03.5
03E8:  MOVWF  07
03E9:  BCF    03.5
03EA:  BTFSS  07.2
03EB:  GOTO   3F1
....................       delay_ms(100); 
03EC:  MOVLW  64
03ED:  MOVWF  60
03EE:  CALL   064
....................       hacdm = hacdm+1; 
03EF:  MOVLW  01
03F0:  ADDWF  54,F
....................       } 
....................       if(input(pin_C3)== 1){ 
03F1:  BSF    56.3
03F2:  MOVF   56,W
03F3:  BSF    03.5
03F4:  MOVWF  07
03F5:  BCF    03.5
03F6:  BTFSS  07.3
03F7:  GOTO   3FD
....................       delay_ms(100); 
03F8:  MOVLW  64
03F9:  MOVWF  60
03FA:  CALL   064
....................       hacum = hacum+1; 
03FB:  MOVLW  01
03FC:  ADDWF  55,F
....................       } 
....................        
....................                                  // controlo da introdução da hora 
....................           
....................       if(hacdh>2) 
03FD:  MOVF   52,W
03FE:  SUBLW  02
03FF:  BTFSS  03.0
....................       hacdh =0; 
0400:  CLRF   52
....................       if(hacuh>9) 
0401:  MOVF   53,W
0402:  SUBLW  09
0403:  BTFSS  03.0
....................       hacuh = 0; 
0404:  CLRF   53
....................       if(hacdm>5) 
0405:  MOVF   54,W
0406:  SUBLW  05
0407:  BTFSS  03.0
....................       hacdm =0; 
0408:  CLRF   54
....................       if(hacum>9) 
0409:  MOVF   55,W
040A:  SUBLW  09
040B:  BTFSS  03.0
....................       hacum = 0; 
040C:  CLRF   55
....................        
....................       // limitação das 23h 
....................       if(hacdh == 2){ 
040D:  MOVF   52,W
040E:  SUBLW  02
040F:  BTFSS  03.2
0410:  GOTO   415
....................       if(hacuh>3) 
0411:  MOVF   53,W
0412:  SUBLW  03
0413:  BTFSS  03.0
....................       hacuh = 0; 
0414:  CLRF   53
....................       } 
....................        
....................       
....................            
....................           caracter = hacdh+48; 
0415:  MOVLW  30
0416:  ADDWF  52,W
0417:  MOVWF  27
0418:  CLRF   28
....................           transfere_carac(caracter); 
0419:  MOVF   27,W
041A:  MOVWF  5F
041B:  CALL   0CF
....................           caracter = hacuh+48; 
041C:  MOVLW  30
041D:  ADDWF  53,W
041E:  MOVWF  27
041F:  CLRF   28
....................           transfere_carac(caracter); 
0420:  MOVF   27,W
0421:  MOVWF  5F
0422:  CALL   0CF
....................           caracter = ':'; 
0423:  CLRF   28
0424:  MOVLW  3A
0425:  MOVWF  27
....................           transfere_carac(caracter); 
0426:  MOVF   27,W
0427:  MOVWF  5F
0428:  CALL   0CF
....................           caracter = hacdm+48; 
0429:  MOVLW  30
042A:  ADDWF  54,W
042B:  MOVWF  27
042C:  CLRF   28
....................           transfere_carac(caracter); 
042D:  MOVF   27,W
042E:  MOVWF  5F
042F:  CALL   0CF
....................           caracter = hacum+48; 
0430:  MOVLW  30
0431:  ADDWF  55,W
0432:  MOVWF  27
0433:  CLRF   28
....................           transfere_carac(caracter); 
0434:  MOVF   27,W
0435:  MOVWF  5F
0436:  CALL   0CF
....................            
....................             
....................     ler_tecla(); 
0437:  CALL   173
....................    
....................       
....................   }while(tecla!='C' && tecla != 'B' );    // fim do while 
0438:  MOVF   3F,W
0439:  SUBLW  43
043A:  BTFSC  03.2
043B:  GOTO   440
043C:  MOVF   3F,W
043D:  SUBLW  42
043E:  BTFSS  03.2
043F:  GOTO   3C5
....................     
....................  
....................      instrucao = 1;  // limpa lcd e manda o cursor para primeira posissão 
0440:  CLRF   2A
0441:  MOVLW  01
0442:  MOVWF  29
....................      transfere_inst(instrucao); 
0443:  MOVF   29,W
0444:  MOVWF  5F
0445:  CALL   084
....................  }//fim do acerto das horas 
0446:  BSF    0A.3
0447:  BCF    0A.4
0448:  GOTO   5CA (RETURN)
....................    
....................   
....................   
....................   
....................   
....................  // função que define a hora de rega da zona 1 
.................... void def_hregaZ1(){ 
....................  int dhoras,uhoras, dminutos, uminutos;     
....................   
.................... // definir a hora de rega da zona 1 
....................   
....................   do{ 
....................     tecla = '#'; 
*
046E:  MOVLW  23
046F:  MOVWF  3F
....................  
....................      
....................     if(input(pin_C0)== 1){ 
0470:  BSF    56.0
0471:  MOVF   56,W
0472:  BSF    03.5
0473:  MOVWF  07
0474:  BCF    03.5
0475:  BTFSS  07.0
0476:  GOTO   47C
....................       delay_ms(100); 
0477:  MOVLW  64
0478:  MOVWF  60
0479:  CALL   064
....................       dhz1= dhz1 +1; 
047A:  MOVLW  01
047B:  ADDWF  40,F
....................       } 
....................       if(input(pin_C1)== 1){ 
047C:  BSF    56.1
047D:  MOVF   56,W
047E:  BSF    03.5
047F:  MOVWF  07
0480:  BCF    03.5
0481:  BTFSS  07.1
0482:  GOTO   488
....................       delay_ms(100); 
0483:  MOVLW  64
0484:  MOVWF  60
0485:  CALL   064
....................       uhz1 = uhz1+1; 
0486:  MOVLW  01
0487:  ADDWF  41,F
....................       } 
....................       if(input(pin_C2)== 1){ 
0488:  BSF    56.2
0489:  MOVF   56,W
048A:  BSF    03.5
048B:  MOVWF  07
048C:  BCF    03.5
048D:  BTFSS  07.2
048E:  GOTO   494
....................       delay_ms(100); 
048F:  MOVLW  64
0490:  MOVWF  60
0491:  CALL   064
....................       dmz1 = dmz1+1; 
0492:  MOVLW  01
0493:  ADDWF  42,F
....................       } 
....................       if(input(pin_C3)== 1){ 
0494:  BSF    56.3
0495:  MOVF   56,W
0496:  BSF    03.5
0497:  MOVWF  07
0498:  BCF    03.5
0499:  BTFSS  07.3
049A:  GOTO   4A0
....................       delay_ms(100); 
049B:  MOVLW  64
049C:  MOVWF  60
049D:  CALL   064
....................       umz1 = umz1+1; 
049E:  MOVLW  01
049F:  ADDWF  43,F
....................       } 
....................        
....................                                  // controlo da introdução da hora 
....................           
....................       if(dhz1>2) 
04A0:  MOVF   40,W
04A1:  SUBLW  02
04A2:  BTFSS  03.0
....................       dhz1 =0; 
04A3:  CLRF   40
....................       if(uhz1>9) 
04A4:  MOVF   41,W
04A5:  SUBLW  09
04A6:  BTFSS  03.0
....................       uhz1 = 0; 
04A7:  CLRF   41
....................       if(dmz1>5) 
04A8:  MOVF   42,W
04A9:  SUBLW  05
04AA:  BTFSS  03.0
....................       dmz1 =0; 
04AB:  CLRF   42
....................       if(umz1>9) 
04AC:  MOVF   43,W
04AD:  SUBLW  09
04AE:  BTFSS  03.0
....................       umz1 = 0; 
04AF:  CLRF   43
....................        
....................       // limitação das 23h 
....................       if(dhz1 == 2){ 
04B0:  MOVF   40,W
04B1:  SUBLW  02
04B2:  BTFSS  03.2
04B3:  GOTO   4B8
....................       if(uhz1>3) 
04B4:  MOVF   41,W
04B5:  SUBLW  03
04B6:  BTFSS  03.0
....................       uhz1 = 0; 
04B7:  CLRF   41
....................       } 
....................        
....................      // Definir tempo de rega 
....................       if(mintZ1 >9){ 
04B8:  MOVF   4D,F
04B9:  BTFSS  03.2
04BA:  GOTO   4BF
04BB:  MOVF   4C,W
04BC:  SUBLW  09
04BD:  BTFSC  03.0
04BE:  GOTO   4C1
....................       mintZ1 = 0; 
04BF:  CLRF   4D
04C0:  CLRF   4C
....................       } 
....................                                
....................           instrucao = 128; 
04C1:  CLRF   2A
04C2:  MOVLW  80
04C3:  MOVWF  29
....................           transfere_inst(instrucao); 
04C4:  MOVF   29,W
04C5:  MOVWF  5F
04C6:  CALL   084
....................           caracter = 'Z'; 
04C7:  CLRF   28
04C8:  MOVLW  5A
04C9:  MOVWF  27
....................           transfere_carac(caracter); 
04CA:  MOVF   27,W
04CB:  MOVWF  5F
04CC:  CALL   0CF
....................           caracter = 'o'; 
04CD:  CLRF   28
04CE:  MOVLW  6F
04CF:  MOVWF  27
....................           transfere_carac(caracter); 
04D0:  MOVF   27,W
04D1:  MOVWF  5F
04D2:  CALL   0CF
....................           caracter = 'n'; 
04D3:  CLRF   28
04D4:  MOVLW  6E
04D5:  MOVWF  27
....................           transfere_carac(caracter); 
04D6:  MOVF   27,W
04D7:  MOVWF  5F
04D8:  CALL   0CF
....................           caracter = 'a'; 
04D9:  CLRF   28
04DA:  MOVLW  61
04DB:  MOVWF  27
....................           transfere_carac(caracter); 
04DC:  MOVF   27,W
04DD:  MOVWF  5F
04DE:  CALL   0CF
....................           caracter = '1'; 
04DF:  CLRF   28
04E0:  MOVLW  31
04E1:  MOVWF  27
....................           transfere_carac(caracter); 
04E2:  MOVF   27,W
04E3:  MOVWF  5F
04E4:  CALL   0CF
....................            
....................           instrucao = 136; 
04E5:  CLRF   2A
04E6:  MOVLW  88
04E7:  MOVWF  29
....................           transfere_inst(instrucao); 
04E8:  MOVF   29,W
04E9:  MOVWF  5F
04EA:  CALL   084
....................           dhoras = dhz1; 
04EB:  MOVF   40,W
04EC:  MOVWF  5B
....................           caracter = dhoras+48; 
04ED:  MOVLW  30
04EE:  ADDWF  5B,W
04EF:  MOVWF  27
04F0:  CLRF   28
....................           transfere_carac(caracter); 
04F1:  MOVF   27,W
04F2:  MOVWF  5F
04F3:  CALL   0CF
....................           uhoras = uhz1; 
04F4:  MOVF   41,W
04F5:  MOVWF  5C
....................           caracter = uhoras+48; 
04F6:  MOVLW  30
04F7:  ADDWF  5C,W
04F8:  MOVWF  27
04F9:  CLRF   28
....................           transfere_carac(caracter); 
04FA:  MOVF   27,W
04FB:  MOVWF  5F
04FC:  CALL   0CF
....................           caracter = ':'; 
04FD:  CLRF   28
04FE:  MOVLW  3A
04FF:  MOVWF  27
....................           transfere_carac(caracter); 
0500:  MOVF   27,W
0501:  MOVWF  5F
0502:  CALL   0CF
....................           dminutos= dmz1; 
0503:  MOVF   42,W
0504:  MOVWF  5D
....................           caracter = dminutos+48; 
0505:  MOVLW  30
0506:  ADDWF  5D,W
0507:  MOVWF  27
0508:  CLRF   28
....................           transfere_carac(caracter); 
0509:  MOVF   27,W
050A:  MOVWF  5F
050B:  CALL   0CF
....................           uminutos = umz1; 
050C:  MOVF   43,W
050D:  MOVWF  5E
....................           caracter = uminutos+48; 
050E:  MOVLW  30
050F:  ADDWF  5E,W
0510:  MOVWF  27
0511:  CLRF   28
....................           transfere_carac(caracter); 
0512:  MOVF   27,W
0513:  MOVWF  5F
0514:  CALL   0CF
....................           instrucao = 192; 
0515:  CLRF   2A
0516:  MOVLW  C0
0517:  MOVWF  29
....................           transfere_inst(instrucao); 
0518:  MOVF   29,W
0519:  MOVWF  5F
051A:  CALL   084
....................           caracter = 'T'; 
051B:  CLRF   28
051C:  MOVLW  54
051D:  MOVWF  27
....................           transfere_carac(caracter); 
051E:  MOVF   27,W
051F:  MOVWF  5F
0520:  CALL   0CF
....................           caracter = '_'; 
0521:  CLRF   28
0522:  MOVLW  5F
0523:  MOVWF  27
....................           transfere_carac(caracter); 
0524:  MOVF   27,W
0525:  MOVWF  5F
0526:  CALL   0CF
....................           caracter = 'R'; 
0527:  CLRF   28
0528:  MOVLW  52
0529:  MOVWF  27
....................           transfere_carac(caracter); 
052A:  MOVF   27,W
052B:  MOVWF  5F
052C:  CALL   0CF
....................           caracter = 'e'; 
052D:  CLRF   28
052E:  MOVLW  65
052F:  MOVWF  27
....................           transfere_carac(caracter); 
0530:  MOVF   27,W
0531:  MOVWF  5F
0532:  CALL   0CF
....................           caracter = 'g'; 
0533:  CLRF   28
0534:  MOVLW  67
0535:  MOVWF  27
....................           transfere_carac(caracter); 
0536:  MOVF   27,W
0537:  MOVWF  5F
0538:  CALL   0CF
....................           caracter = 'a'; 
0539:  CLRF   28
053A:  MOVLW  61
053B:  MOVWF  27
....................           transfere_carac(caracter); 
053C:  MOVF   27,W
053D:  MOVWF  5F
053E:  CALL   0CF
....................           instrucao = 202; 
053F:  CLRF   2A
0540:  MOVLW  CA
0541:  MOVWF  29
....................           transfere_inst(instrucao); 
0542:  MOVF   29,W
0543:  MOVWF  5F
0544:  CALL   084
....................           caracter = mintZ1+48; 
0545:  MOVLW  30
0546:  ADDWF  4C,W
0547:  MOVWF  27
0548:  MOVF   4D,W
0549:  MOVWF  28
054A:  BTFSC  03.0
054B:  INCF   28,F
....................           transfere_carac(caracter); 
054C:  MOVF   27,W
054D:  MOVWF  5F
054E:  CALL   0CF
....................             
....................     ler_tecla(); 
054F:  CALL   173
....................    
....................       
....................   }while(tecla!='C' && tecla != 'C' && tecla != 'C' && tecla != 'C');    // fim do while 
0550:  MOVF   3F,W
0551:  SUBLW  43
0552:  BTFSC  03.2
0553:  GOTO   560
0554:  MOVF   3F,W
0555:  SUBLW  43
0556:  BTFSC  03.2
0557:  GOTO   560
0558:  MOVF   3F,W
0559:  SUBLW  43
055A:  BTFSC  03.2
055B:  GOTO   560
055C:  MOVF   3F,W
055D:  SUBLW  43
055E:  BTFSS  03.2
055F:  GOTO   46E
....................     
....................                           // As variáveis são guardados nos endereços 
....................       write_eeprom(00,dhz1); // 0 
0560:  BSF    03.6
0561:  CLRF   0D
0562:  BCF    03.6
0563:  MOVF   40,W
0564:  BSF    03.6
0565:  MOVWF  0C
0566:  BSF    03.5
0567:  BCF    0C.7
0568:  BSF    0C.2
0569:  BCF    03.5
056A:  BCF    03.6
056B:  MOVF   0B,W
056C:  MOVWF  77
056D:  BCF    0B.7
056E:  BSF    03.5
056F:  BSF    03.6
0570:  MOVLW  55
0571:  MOVWF  0D
0572:  MOVLW  AA
0573:  MOVWF  0D
0574:  BSF    0C.1
0575:  BTFSC  0C.1
0576:  GOTO   575
0577:  BCF    0C.2
0578:  MOVF   77,W
0579:  BCF    03.5
057A:  BCF    03.6
057B:  IORWF  0B,F
....................       write_eeprom(01,uhz1); // 1 
057C:  MOVLW  01
057D:  BSF    03.6
057E:  MOVWF  0D
057F:  BCF    03.6
0580:  MOVF   41,W
0581:  BSF    03.6
0582:  MOVWF  0C
0583:  BSF    03.5
0584:  BCF    0C.7
0585:  BSF    0C.2
0586:  BCF    03.5
0587:  BCF    03.6
0588:  MOVF   0B,W
0589:  MOVWF  77
058A:  BCF    0B.7
058B:  BSF    03.5
058C:  BSF    03.6
058D:  MOVLW  55
058E:  MOVWF  0D
058F:  MOVLW  AA
0590:  MOVWF  0D
0591:  BSF    0C.1
0592:  BTFSC  0C.1
0593:  GOTO   592
0594:  BCF    0C.2
0595:  MOVF   77,W
0596:  BCF    03.5
0597:  BCF    03.6
0598:  IORWF  0B,F
....................       write_eeprom(02,dmz1); // 2 
0599:  MOVLW  02
059A:  BSF    03.6
059B:  MOVWF  0D
059C:  BCF    03.6
059D:  MOVF   42,W
059E:  BSF    03.6
059F:  MOVWF  0C
05A0:  BSF    03.5
05A1:  BCF    0C.7
05A2:  BSF    0C.2
05A3:  BCF    03.5
05A4:  BCF    03.6
05A5:  MOVF   0B,W
05A6:  MOVWF  77
05A7:  BCF    0B.7
05A8:  BSF    03.5
05A9:  BSF    03.6
05AA:  MOVLW  55
05AB:  MOVWF  0D
05AC:  MOVLW  AA
05AD:  MOVWF  0D
05AE:  BSF    0C.1
05AF:  BTFSC  0C.1
05B0:  GOTO   5AF
05B1:  BCF    0C.2
05B2:  MOVF   77,W
05B3:  BCF    03.5
05B4:  BCF    03.6
05B5:  IORWF  0B,F
....................       write_eeprom(03,umz1); // 3 
05B6:  MOVLW  03
05B7:  BSF    03.6
05B8:  MOVWF  0D
05B9:  BCF    03.6
05BA:  MOVF   43,W
05BB:  BSF    03.6
05BC:  MOVWF  0C
05BD:  BSF    03.5
05BE:  BCF    0C.7
05BF:  BSF    0C.2
05C0:  BCF    03.5
05C1:  BCF    03.6
05C2:  MOVF   0B,W
05C3:  MOVWF  77
05C4:  BCF    0B.7
05C5:  BSF    03.5
05C6:  BSF    03.6
05C7:  MOVLW  55
05C8:  MOVWF  0D
05C9:  MOVLW  AA
05CA:  MOVWF  0D
05CB:  BSF    0C.1
05CC:  BTFSC  0C.1
05CD:  GOTO   5CC
05CE:  BCF    0C.2
05CF:  MOVF   77,W
05D0:  BCF    03.5
05D1:  BCF    03.6
05D2:  IORWF  0B,F
....................     
....................                                
....................                                          // Definir tempo de rega da zona 1 
....................                                           
....................        do{ 
....................           instrucao = 192; 
05D3:  CLRF   2A
05D4:  MOVLW  C0
05D5:  MOVWF  29
....................           transfere_inst(instrucao); 
05D6:  MOVF   29,W
05D7:  MOVWF  5F
05D8:  CALL   084
....................           caracter = 'T'; 
05D9:  CLRF   28
05DA:  MOVLW  54
05DB:  MOVWF  27
....................           transfere_carac(caracter); 
05DC:  MOVF   27,W
05DD:  MOVWF  5F
05DE:  CALL   0CF
....................           caracter = '_'; 
05DF:  CLRF   28
05E0:  MOVLW  5F
05E1:  MOVWF  27
....................           transfere_carac(caracter); 
05E2:  MOVF   27,W
05E3:  MOVWF  5F
05E4:  CALL   0CF
....................           caracter = 'R'; 
05E5:  CLRF   28
05E6:  MOVLW  52
05E7:  MOVWF  27
....................           transfere_carac(caracter); 
05E8:  MOVF   27,W
05E9:  MOVWF  5F
05EA:  CALL   0CF
....................           caracter = 'e'; 
05EB:  CLRF   28
05EC:  MOVLW  65
05ED:  MOVWF  27
....................           transfere_carac(caracter); 
05EE:  MOVF   27,W
05EF:  MOVWF  5F
05F0:  CALL   0CF
....................           caracter = 'g'; 
05F1:  CLRF   28
05F2:  MOVLW  67
05F3:  MOVWF  27
....................           transfere_carac(caracter); 
05F4:  MOVF   27,W
05F5:  MOVWF  5F
05F6:  CALL   0CF
....................           caracter = 'a'; 
05F7:  CLRF   28
05F8:  MOVLW  61
05F9:  MOVWF  27
....................           transfere_carac(caracter); 
05FA:  MOVF   27,W
05FB:  MOVWF  5F
05FC:  CALL   0CF
....................           instrucao = 202; 
05FD:  CLRF   2A
05FE:  MOVLW  CA
05FF:  MOVWF  29
....................           transfere_inst(instrucao); 
0600:  MOVF   29,W
0601:  MOVWF  5F
0602:  CALL   084
....................      
....................     if(input(pin_C0)== 1 && input(pin_C0)== 1 && input(pin_C0)== 1 && input(pin_C0)== 1){ 
0603:  BSF    56.0
0604:  MOVF   56,W
0605:  BSF    03.5
0606:  MOVWF  07
0607:  BCF    03.5
0608:  BTFSS  07.0
0609:  GOTO   626
060A:  BSF    56.0
060B:  MOVF   56,W
060C:  BSF    03.5
060D:  MOVWF  07
060E:  BCF    03.5
060F:  BTFSS  07.0
0610:  GOTO   626
0611:  BSF    56.0
0612:  MOVF   56,W
0613:  BSF    03.5
0614:  MOVWF  07
0615:  BCF    03.5
0616:  BTFSS  07.0
0617:  GOTO   626
0618:  BSF    56.0
0619:  MOVF   56,W
061A:  BSF    03.5
061B:  MOVWF  07
061C:  BCF    03.5
061D:  BTFSS  07.0
061E:  GOTO   626
....................       delay_ms(100); 
061F:  MOVLW  64
0620:  MOVWF  60
0621:  CALL   064
....................       mintZ1 = mintZ1 + 1; 
0622:  MOVLW  01
0623:  ADDWF  4C,F
0624:  BTFSC  03.0
0625:  INCF   4D,F
....................       } 
....................          
....................       if(mintZ1 > 9){ 
0626:  MOVF   4D,F
0627:  BTFSS  03.2
0628:  GOTO   62D
0629:  MOVF   4C,W
062A:  SUBLW  09
062B:  BTFSC  03.0
062C:  GOTO   62F
....................       mintZ1 = 0; 
062D:  CLRF   4D
062E:  CLRF   4C
....................       } 
....................        
....................  
....................           caracter = mintZ1+48; 
062F:  MOVLW  30
0630:  ADDWF  4C,W
0631:  MOVWF  27
0632:  MOVF   4D,W
0633:  MOVWF  28
0634:  BTFSC  03.0
0635:  INCF   28,F
....................           transfere_carac(caracter); 
0636:  MOVF   27,W
0637:  MOVWF  5F
0638:  CALL   0CF
....................              
....................       
....................     ler_tecla(); 
0639:  CALL   173
....................    
....................       
....................   }while(tecla!='C' && tecla != 'C' && tecla != 'C' && tecla != 'C');    // fim do while 
063A:  MOVF   3F,W
063B:  SUBLW  43
063C:  BTFSC  03.2
063D:  GOTO   64A
063E:  MOVF   3F,W
063F:  SUBLW  43
0640:  BTFSC  03.2
0641:  GOTO   64A
0642:  MOVF   3F,W
0643:  SUBLW  43
0644:  BTFSC  03.2
0645:  GOTO   64A
0646:  MOVF   3F,W
0647:  SUBLW  43
0648:  BTFSS  03.2
0649:  GOTO   5D3
....................        
....................       write_eeprom(04,mintZ1); // Variável mintZ1 é guardado no endereço 4 
064A:  MOVLW  04
064B:  BSF    03.6
064C:  MOVWF  0D
064D:  BCF    03.6
064E:  MOVF   4C,W
064F:  BSF    03.6
0650:  MOVWF  0C
0651:  BSF    03.5
0652:  BCF    0C.7
0653:  BSF    0C.2
0654:  BCF    03.5
0655:  BCF    03.6
0656:  MOVF   0B,W
0657:  MOVWF  77
0658:  BCF    0B.7
0659:  BSF    03.5
065A:  BSF    03.6
065B:  MOVLW  55
065C:  MOVWF  0D
065D:  MOVLW  AA
065E:  MOVWF  0D
065F:  BSF    0C.1
0660:  BTFSC  0C.1
0661:  GOTO   660
0662:  BCF    0C.2
0663:  MOVF   77,W
0664:  BCF    03.5
0665:  BCF    03.6
0666:  IORWF  0B,F
.................... }//fim da função def_hrega da zona 1 
0667:  BSF    0A.3
0668:  BCF    0A.4
0669:  GOTO   604 (RETURN)
....................  
....................   
.................... // definir a hora de rega da zona 2 
....................  
....................  void def_hregaZ2(){ 
....................  int dhoras,uhoras, dminutos, uminutos; 
....................   do{ 
....................     tecla = '#'; 
*
0800:  MOVLW  23
0801:  MOVWF  3F
....................      
....................     if(input(pin_C0)== 1){ 
0802:  BSF    56.0
0803:  MOVF   56,W
0804:  BSF    03.5
0805:  MOVWF  07
0806:  BCF    03.5
0807:  BTFSS  07.0
0808:  GOTO   010
....................       delay_ms(100); 
0809:  MOVLW  64
080A:  MOVWF  60
080B:  BCF    0A.3
080C:  CALL   064
080D:  BSF    0A.3
....................       dhz2= dhz2 +1; 
080E:  MOVLW  01
080F:  ADDWF  44,F
....................       } 
....................       if(input(pin_C1)== 1){ 
0810:  BSF    56.1
0811:  MOVF   56,W
0812:  BSF    03.5
0813:  MOVWF  07
0814:  BCF    03.5
0815:  BTFSS  07.1
0816:  GOTO   01E
....................       delay_ms(100); 
0817:  MOVLW  64
0818:  MOVWF  60
0819:  BCF    0A.3
081A:  CALL   064
081B:  BSF    0A.3
....................       uhz2 = uhz2+1; 
081C:  MOVLW  01
081D:  ADDWF  45,F
....................       } 
....................       if(input(pin_C2)== 1){ 
081E:  BSF    56.2
081F:  MOVF   56,W
0820:  BSF    03.5
0821:  MOVWF  07
0822:  BCF    03.5
0823:  BTFSS  07.2
0824:  GOTO   02C
....................       delay_ms(100); 
0825:  MOVLW  64
0826:  MOVWF  60
0827:  BCF    0A.3
0828:  CALL   064
0829:  BSF    0A.3
....................       dmz2 = dmz2+1; 
082A:  MOVLW  01
082B:  ADDWF  46,F
....................       } 
....................       if(input(pin_C3)== 1){ 
082C:  BSF    56.3
082D:  MOVF   56,W
082E:  BSF    03.5
082F:  MOVWF  07
0830:  BCF    03.5
0831:  BTFSS  07.3
0832:  GOTO   03A
....................       delay_ms(100); 
0833:  MOVLW  64
0834:  MOVWF  60
0835:  BCF    0A.3
0836:  CALL   064
0837:  BSF    0A.3
....................       umz2 =umz2+1; 
0838:  MOVLW  01
0839:  ADDWF  47,F
....................       } 
....................                                   // controlo da introdução das horas 
....................                 
....................       if(dhz2>2) 
083A:  MOVF   44,W
083B:  SUBLW  02
083C:  BTFSS  03.0
....................       dhz2 =0; 
083D:  CLRF   44
....................       if(uhz2>9) 
083E:  MOVF   45,W
083F:  SUBLW  09
0840:  BTFSS  03.0
....................       uhz2 = 0; 
0841:  CLRF   45
....................       if(dmz2>5) 
0842:  MOVF   46,W
0843:  SUBLW  05
0844:  BTFSS  03.0
....................       dmz2 =0; 
0845:  CLRF   46
....................       if(umz2>9) 
0846:  MOVF   47,W
0847:  SUBLW  09
0848:  BTFSS  03.0
....................       umz2 = 0; 
0849:  CLRF   47
....................        
....................       // limitação das 23h 
....................       if(dhz2 == 2){ 
084A:  MOVF   44,W
084B:  SUBLW  02
084C:  BTFSS  03.2
084D:  GOTO   052
....................       if(uhz2>3) 
084E:  MOVF   45,W
084F:  SUBLW  03
0850:  BTFSS  03.0
....................       uhz2 = 0; 
0851:  CLRF   45
....................       } 
....................           instrucao = 128; 
0852:  CLRF   2A
0853:  MOVLW  80
0854:  MOVWF  29
....................           transfere_inst(instrucao); 
0855:  MOVF   29,W
0856:  MOVWF  5F
0857:  BCF    0A.3
0858:  CALL   084
0859:  BSF    0A.3
....................           caracter = 'Z'; 
085A:  CLRF   28
085B:  MOVLW  5A
085C:  MOVWF  27
....................           transfere_carac(caracter); 
085D:  MOVF   27,W
085E:  MOVWF  5F
085F:  BCF    0A.3
0860:  CALL   0CF
0861:  BSF    0A.3
....................           caracter = 'o'; 
0862:  CLRF   28
0863:  MOVLW  6F
0864:  MOVWF  27
....................           transfere_carac(caracter); 
0865:  MOVF   27,W
0866:  MOVWF  5F
0867:  BCF    0A.3
0868:  CALL   0CF
0869:  BSF    0A.3
....................           caracter = 'n'; 
086A:  CLRF   28
086B:  MOVLW  6E
086C:  MOVWF  27
....................           transfere_carac(caracter); 
086D:  MOVF   27,W
086E:  MOVWF  5F
086F:  BCF    0A.3
0870:  CALL   0CF
0871:  BSF    0A.3
....................           caracter = 'a'; 
0872:  CLRF   28
0873:  MOVLW  61
0874:  MOVWF  27
....................           transfere_carac(caracter); 
0875:  MOVF   27,W
0876:  MOVWF  5F
0877:  BCF    0A.3
0878:  CALL   0CF
0879:  BSF    0A.3
....................           caracter = '2'; 
087A:  CLRF   28
087B:  MOVLW  32
087C:  MOVWF  27
....................           transfere_carac(caracter); 
087D:  MOVF   27,W
087E:  MOVWF  5F
087F:  BCF    0A.3
0880:  CALL   0CF
0881:  BSF    0A.3
....................        
....................           instrucao = 136; 
0882:  CLRF   2A
0883:  MOVLW  88
0884:  MOVWF  29
....................           transfere_inst(instrucao); 
0885:  MOVF   29,W
0886:  MOVWF  5F
0887:  BCF    0A.3
0888:  CALL   084
0889:  BSF    0A.3
....................           dhoras = dhz2; 
088A:  MOVF   44,W
088B:  MOVWF  5B
....................           caracter = dhoras+48; 
088C:  MOVLW  30
088D:  ADDWF  5B,W
088E:  MOVWF  27
088F:  CLRF   28
....................           transfere_carac(caracter); 
0890:  MOVF   27,W
0891:  MOVWF  5F
0892:  BCF    0A.3
0893:  CALL   0CF
0894:  BSF    0A.3
....................           uhoras = uhz2; 
0895:  MOVF   45,W
0896:  MOVWF  5C
....................           caracter = uhoras+48; 
0897:  MOVLW  30
0898:  ADDWF  5C,W
0899:  MOVWF  27
089A:  CLRF   28
....................           transfere_carac(caracter); 
089B:  MOVF   27,W
089C:  MOVWF  5F
089D:  BCF    0A.3
089E:  CALL   0CF
089F:  BSF    0A.3
....................           caracter = ':'; 
08A0:  CLRF   28
08A1:  MOVLW  3A
08A2:  MOVWF  27
....................           transfere_carac(caracter); 
08A3:  MOVF   27,W
08A4:  MOVWF  5F
08A5:  BCF    0A.3
08A6:  CALL   0CF
08A7:  BSF    0A.3
....................           dminutos= dmz2; 
08A8:  MOVF   46,W
08A9:  MOVWF  5D
....................           caracter = dminutos+48; 
08AA:  MOVLW  30
08AB:  ADDWF  5D,W
08AC:  MOVWF  27
08AD:  CLRF   28
....................           transfere_carac(caracter); 
08AE:  MOVF   27,W
08AF:  MOVWF  5F
08B0:  BCF    0A.3
08B1:  CALL   0CF
08B2:  BSF    0A.3
....................           uminutos = umz2; 
08B3:  MOVF   47,W
08B4:  MOVWF  5E
....................           caracter = uminutos+48; 
08B5:  MOVLW  30
08B6:  ADDWF  5E,W
08B7:  MOVWF  27
08B8:  CLRF   28
....................           transfere_carac(caracter); 
08B9:  MOVF   27,W
08BA:  MOVWF  5F
08BB:  BCF    0A.3
08BC:  CALL   0CF
08BD:  BSF    0A.3
....................           instrucao = 192; 
08BE:  CLRF   2A
08BF:  MOVLW  C0
08C0:  MOVWF  29
....................           transfere_inst(instrucao); 
08C1:  MOVF   29,W
08C2:  MOVWF  5F
08C3:  BCF    0A.3
08C4:  CALL   084
08C5:  BSF    0A.3
....................           caracter = 'T'; 
08C6:  CLRF   28
08C7:  MOVLW  54
08C8:  MOVWF  27
....................           transfere_carac(caracter); 
08C9:  MOVF   27,W
08CA:  MOVWF  5F
08CB:  BCF    0A.3
08CC:  CALL   0CF
08CD:  BSF    0A.3
....................           caracter = '_'; 
08CE:  CLRF   28
08CF:  MOVLW  5F
08D0:  MOVWF  27
....................           transfere_carac(caracter); 
08D1:  MOVF   27,W
08D2:  MOVWF  5F
08D3:  BCF    0A.3
08D4:  CALL   0CF
08D5:  BSF    0A.3
....................           caracter = 'R'; 
08D6:  CLRF   28
08D7:  MOVLW  52
08D8:  MOVWF  27
....................           transfere_carac(caracter); 
08D9:  MOVF   27,W
08DA:  MOVWF  5F
08DB:  BCF    0A.3
08DC:  CALL   0CF
08DD:  BSF    0A.3
....................           caracter = 'e'; 
08DE:  CLRF   28
08DF:  MOVLW  65
08E0:  MOVWF  27
....................           transfere_carac(caracter); 
08E1:  MOVF   27,W
08E2:  MOVWF  5F
08E3:  BCF    0A.3
08E4:  CALL   0CF
08E5:  BSF    0A.3
....................           caracter = 'g'; 
08E6:  CLRF   28
08E7:  MOVLW  67
08E8:  MOVWF  27
....................           transfere_carac(caracter); 
08E9:  MOVF   27,W
08EA:  MOVWF  5F
08EB:  BCF    0A.3
08EC:  CALL   0CF
08ED:  BSF    0A.3
....................           caracter = 'a'; 
08EE:  CLRF   28
08EF:  MOVLW  61
08F0:  MOVWF  27
....................           transfere_carac(caracter); 
08F1:  MOVF   27,W
08F2:  MOVWF  5F
08F3:  BCF    0A.3
08F4:  CALL   0CF
08F5:  BSF    0A.3
....................           instrucao = 202; 
08F6:  CLRF   2A
08F7:  MOVLW  CA
08F8:  MOVWF  29
....................           transfere_inst(instrucao); 
08F9:  MOVF   29,W
08FA:  MOVWF  5F
08FB:  BCF    0A.3
08FC:  CALL   084
08FD:  BSF    0A.3
....................           caracter = mintZ2+48; 
08FE:  MOVLW  30
08FF:  ADDWF  4E,W
0900:  MOVWF  27
0901:  MOVF   4F,W
0902:  MOVWF  28
0903:  BTFSC  03.0
0904:  INCF   28,F
....................           transfere_carac(caracter); 
0905:  MOVF   27,W
0906:  MOVWF  5F
0907:  BCF    0A.3
0908:  CALL   0CF
0909:  BSF    0A.3
....................          
....................      
....................      
....................     
....................       
....................     ler_tecla(); 
090A:  BCF    0A.3
090B:  CALL   173
090C:  BSF    0A.3
....................    
....................       
....................   }while(tecla!='C' && tecla != 'C' && tecla != 'C' && tecla != 'C');    // fim do while 
090D:  MOVF   3F,W
090E:  SUBLW  43
090F:  BTFSC  03.2
0910:  GOTO   11D
0911:  MOVF   3F,W
0912:  SUBLW  43
0913:  BTFSC  03.2
0914:  GOTO   11D
0915:  MOVF   3F,W
0916:  SUBLW  43
0917:  BTFSC  03.2
0918:  GOTO   11D
0919:  MOVF   3F,W
091A:  SUBLW  43
091B:  BTFSS  03.2
091C:  GOTO   000
....................    
....................           // As variáveis são guardados nos endereços 
....................       write_eeprom(05,dhz2); // 5 
091D:  MOVLW  05
091E:  BSF    03.6
091F:  MOVWF  0D
0920:  BCF    03.6
0921:  MOVF   44,W
0922:  BSF    03.6
0923:  MOVWF  0C
0924:  BSF    03.5
0925:  BCF    0C.7
0926:  BSF    0C.2
0927:  BCF    03.5
0928:  BCF    03.6
0929:  MOVF   0B,W
092A:  MOVWF  77
092B:  BCF    0B.7
092C:  BSF    03.5
092D:  BSF    03.6
092E:  MOVLW  55
092F:  MOVWF  0D
0930:  MOVLW  AA
0931:  MOVWF  0D
0932:  BSF    0C.1
0933:  BTFSC  0C.1
0934:  GOTO   133
0935:  BCF    0C.2
0936:  MOVF   77,W
0937:  BCF    03.5
0938:  BCF    03.6
0939:  IORWF  0B,F
....................       write_eeprom(06,uhz2); // 6 
093A:  MOVLW  06
093B:  BSF    03.6
093C:  MOVWF  0D
093D:  BCF    03.6
093E:  MOVF   45,W
093F:  BSF    03.6
0940:  MOVWF  0C
0941:  BSF    03.5
0942:  BCF    0C.7
0943:  BSF    0C.2
0944:  BCF    03.5
0945:  BCF    03.6
0946:  MOVF   0B,W
0947:  MOVWF  77
0948:  BCF    0B.7
0949:  BSF    03.5
094A:  BSF    03.6
094B:  MOVLW  55
094C:  MOVWF  0D
094D:  MOVLW  AA
094E:  MOVWF  0D
094F:  BSF    0C.1
0950:  BTFSC  0C.1
0951:  GOTO   150
0952:  BCF    0C.2
0953:  MOVF   77,W
0954:  BCF    03.5
0955:  BCF    03.6
0956:  IORWF  0B,F
....................       write_eeprom(07,dmz2); // 7 
0957:  MOVLW  07
0958:  BSF    03.6
0959:  MOVWF  0D
095A:  BCF    03.6
095B:  MOVF   46,W
095C:  BSF    03.6
095D:  MOVWF  0C
095E:  BSF    03.5
095F:  BCF    0C.7
0960:  BSF    0C.2
0961:  BCF    03.5
0962:  BCF    03.6
0963:  MOVF   0B,W
0964:  MOVWF  77
0965:  BCF    0B.7
0966:  BSF    03.5
0967:  BSF    03.6
0968:  MOVLW  55
0969:  MOVWF  0D
096A:  MOVLW  AA
096B:  MOVWF  0D
096C:  BSF    0C.1
096D:  BTFSC  0C.1
096E:  GOTO   16D
096F:  BCF    0C.2
0970:  MOVF   77,W
0971:  BCF    03.5
0972:  BCF    03.6
0973:  IORWF  0B,F
....................       write_eeprom(10,umz2); // 10 
0974:  MOVLW  0A
0975:  BSF    03.6
0976:  MOVWF  0D
0977:  BCF    03.6
0978:  MOVF   47,W
0979:  BSF    03.6
097A:  MOVWF  0C
097B:  BSF    03.5
097C:  BCF    0C.7
097D:  BSF    0C.2
097E:  BCF    03.5
097F:  BCF    03.6
0980:  MOVF   0B,W
0981:  MOVWF  77
0982:  BCF    0B.7
0983:  BSF    03.5
0984:  BSF    03.6
0985:  MOVLW  55
0986:  MOVWF  0D
0987:  MOVLW  AA
0988:  MOVWF  0D
0989:  BSF    0C.1
098A:  BTFSC  0C.1
098B:  GOTO   18A
098C:  BCF    0C.2
098D:  MOVF   77,W
098E:  BCF    03.5
098F:  BCF    03.6
0990:  IORWF  0B,F
....................         
....................                                     // Tempo de rega para Zona 2 
....................       do{ 
....................           instrucao = 192; 
0991:  CLRF   2A
0992:  MOVLW  C0
0993:  MOVWF  29
....................           transfere_inst(instrucao); 
0994:  MOVF   29,W
0995:  MOVWF  5F
0996:  BCF    0A.3
0997:  CALL   084
0998:  BSF    0A.3
....................           caracter = 'T'; 
0999:  CLRF   28
099A:  MOVLW  54
099B:  MOVWF  27
....................           transfere_carac(caracter); 
099C:  MOVF   27,W
099D:  MOVWF  5F
099E:  BCF    0A.3
099F:  CALL   0CF
09A0:  BSF    0A.3
....................           caracter = '_'; 
09A1:  CLRF   28
09A2:  MOVLW  5F
09A3:  MOVWF  27
....................           transfere_carac(caracter); 
09A4:  MOVF   27,W
09A5:  MOVWF  5F
09A6:  BCF    0A.3
09A7:  CALL   0CF
09A8:  BSF    0A.3
....................           caracter = 'R'; 
09A9:  CLRF   28
09AA:  MOVLW  52
09AB:  MOVWF  27
....................           transfere_carac(caracter); 
09AC:  MOVF   27,W
09AD:  MOVWF  5F
09AE:  BCF    0A.3
09AF:  CALL   0CF
09B0:  BSF    0A.3
....................           caracter = 'e'; 
09B1:  CLRF   28
09B2:  MOVLW  65
09B3:  MOVWF  27
....................           transfere_carac(caracter); 
09B4:  MOVF   27,W
09B5:  MOVWF  5F
09B6:  BCF    0A.3
09B7:  CALL   0CF
09B8:  BSF    0A.3
....................           caracter = 'g'; 
09B9:  CLRF   28
09BA:  MOVLW  67
09BB:  MOVWF  27
....................           transfere_carac(caracter); 
09BC:  MOVF   27,W
09BD:  MOVWF  5F
09BE:  BCF    0A.3
09BF:  CALL   0CF
09C0:  BSF    0A.3
....................           caracter = 'a'; 
09C1:  CLRF   28
09C2:  MOVLW  61
09C3:  MOVWF  27
....................           transfere_carac(caracter); 
09C4:  MOVF   27,W
09C5:  MOVWF  5F
09C6:  BCF    0A.3
09C7:  CALL   0CF
09C8:  BSF    0A.3
....................           instrucao = 201; 
09C9:  CLRF   2A
09CA:  MOVLW  C9
09CB:  MOVWF  29
....................           transfere_inst(instrucao); 
09CC:  MOVF   29,W
09CD:  MOVWF  5F
09CE:  BCF    0A.3
09CF:  CALL   084
09D0:  BSF    0A.3
....................       
....................     if(input(pin_C0)== 1){ 
09D1:  BSF    56.0
09D2:  MOVF   56,W
09D3:  BSF    03.5
09D4:  MOVWF  07
09D5:  BCF    03.5
09D6:  BTFSS  07.0
09D7:  GOTO   1E1
....................       delay_ms(100); 
09D8:  MOVLW  64
09D9:  MOVWF  60
09DA:  BCF    0A.3
09DB:  CALL   064
09DC:  BSF    0A.3
....................       mintZ2 = mintZ2 +1; 
09DD:  MOVLW  01
09DE:  ADDWF  4E,F
09DF:  BTFSC  03.0
09E0:  INCF   4F,F
....................       } 
....................          
....................       if(mintZ2 > 9){ 
09E1:  MOVF   4F,F
09E2:  BTFSS  03.2
09E3:  GOTO   1E8
09E4:  MOVF   4E,W
09E5:  SUBLW  09
09E6:  BTFSC  03.0
09E7:  GOTO   1EA
....................       mintZ2 = 0; 
09E8:  CLRF   4F
09E9:  CLRF   4E
....................       } 
....................  
....................           caracter = mintZ2+48; 
09EA:  MOVLW  30
09EB:  ADDWF  4E,W
09EC:  MOVWF  27
09ED:  MOVF   4F,W
09EE:  MOVWF  28
09EF:  BTFSC  03.0
09F0:  INCF   28,F
....................           transfere_carac(caracter); 
09F1:  MOVF   27,W
09F2:  MOVWF  5F
09F3:  BCF    0A.3
09F4:  CALL   0CF
09F5:  BSF    0A.3
....................              
....................       
....................     ler_tecla(); 
09F6:  BCF    0A.3
09F7:  CALL   173
09F8:  BSF    0A.3
....................    
....................       
....................   }while(tecla!='C' && tecla != 'C' && tecla != 'C' && tecla != 'C');    // fim do while 
09F9:  MOVF   3F,W
09FA:  SUBLW  43
09FB:  BTFSC  03.2
09FC:  GOTO   209
09FD:  MOVF   3F,W
09FE:  SUBLW  43
09FF:  BTFSC  03.2
0A00:  GOTO   209
0A01:  MOVF   3F,W
0A02:  SUBLW  43
0A03:  BTFSC  03.2
0A04:  GOTO   209
0A05:  MOVF   3F,W
0A06:  SUBLW  43
0A07:  BTFSS  03.2
0A08:  GOTO   191
....................  
....................    write_eeprom(11,mintZ2); // Variável mintZ1 é guardado no endereço 11 
0A09:  MOVLW  0B
0A0A:  BSF    03.6
0A0B:  MOVWF  0D
0A0C:  BCF    03.6
0A0D:  MOVF   4E,W
0A0E:  BSF    03.6
0A0F:  MOVWF  0C
0A10:  BSF    03.5
0A11:  BCF    0C.7
0A12:  BSF    0C.2
0A13:  BCF    03.5
0A14:  BCF    03.6
0A15:  MOVF   0B,W
0A16:  MOVWF  77
0A17:  BCF    0B.7
0A18:  BSF    03.5
0A19:  BSF    03.6
0A1A:  MOVLW  55
0A1B:  MOVWF  0D
0A1C:  MOVLW  AA
0A1D:  MOVWF  0D
0A1E:  BSF    0C.1
0A1F:  BTFSC  0C.1
0A20:  GOTO   21F
0A21:  BCF    0C.2
0A22:  MOVF   77,W
0A23:  BCF    03.5
0A24:  BCF    03.6
0A25:  IORWF  0B,F
.................... }//fim da função def_hrega da zona 2 
0A26:  BSF    0A.3
0A27:  BCF    0A.4
0A28:  GOTO   604 (RETURN)
....................  
....................  
....................  
.................... // definir a hora de rega da zona 3 
....................     
....................  void def_hregaZ3(){ 
....................  int dhoras,uhoras, dminutos, uminutos; 
....................   
.................... // definir a hora de rega da zona 2 
....................  
....................   do{ 
....................     tecla = '#'; 
0A29:  MOVLW  23
0A2A:  MOVWF  3F
....................  
....................      
....................     if(input(pin_C0)== 1){ 
0A2B:  BSF    56.0
0A2C:  MOVF   56,W
0A2D:  BSF    03.5
0A2E:  MOVWF  07
0A2F:  BCF    03.5
0A30:  BTFSS  07.0
0A31:  GOTO   239
....................       delay_ms(100); 
0A32:  MOVLW  64
0A33:  MOVWF  60
0A34:  BCF    0A.3
0A35:  CALL   064
0A36:  BSF    0A.3
....................       dhz3= dhz3 +1; 
0A37:  MOVLW  01
0A38:  ADDWF  48,F
....................       } 
....................       if(input(pin_C1)== 1){ 
0A39:  BSF    56.1
0A3A:  MOVF   56,W
0A3B:  BSF    03.5
0A3C:  MOVWF  07
0A3D:  BCF    03.5
0A3E:  BTFSS  07.1
0A3F:  GOTO   247
....................       delay_ms(100); 
0A40:  MOVLW  64
0A41:  MOVWF  60
0A42:  BCF    0A.3
0A43:  CALL   064
0A44:  BSF    0A.3
....................       uhz3 = uhz3+1; 
0A45:  MOVLW  01
0A46:  ADDWF  49,F
....................       } 
....................       if(input(pin_C2)== 1){ 
0A47:  BSF    56.2
0A48:  MOVF   56,W
0A49:  BSF    03.5
0A4A:  MOVWF  07
0A4B:  BCF    03.5
0A4C:  BTFSS  07.2
0A4D:  GOTO   255
....................       delay_ms(100); 
0A4E:  MOVLW  64
0A4F:  MOVWF  60
0A50:  BCF    0A.3
0A51:  CALL   064
0A52:  BSF    0A.3
....................       dmz3 = dmz3+1; 
0A53:  MOVLW  01
0A54:  ADDWF  4A,F
....................       } 
....................       if(input(pin_C3)== 1){ 
0A55:  BSF    56.3
0A56:  MOVF   56,W
0A57:  BSF    03.5
0A58:  MOVWF  07
0A59:  BCF    03.5
0A5A:  BTFSS  07.3
0A5B:  GOTO   263
....................       delay_ms(100); 
0A5C:  MOVLW  64
0A5D:  MOVWF  60
0A5E:  BCF    0A.3
0A5F:  CALL   064
0A60:  BSF    0A.3
....................       umz3 =umz3+1; 
0A61:  MOVLW  01
0A62:  ADDWF  4B,F
....................       } 
....................                                   // controlo da introdução das horas 
....................                 
....................       if(dhz3>2) 
0A63:  MOVF   48,W
0A64:  SUBLW  02
0A65:  BTFSS  03.0
....................       dhz3 =0; 
0A66:  CLRF   48
....................       if(uhz3>9) 
0A67:  MOVF   49,W
0A68:  SUBLW  09
0A69:  BTFSS  03.0
....................       uhz3 = 0; 
0A6A:  CLRF   49
....................       if(dmz3>5) 
0A6B:  MOVF   4A,W
0A6C:  SUBLW  05
0A6D:  BTFSS  03.0
....................       dmz3 =0; 
0A6E:  CLRF   4A
....................       if(umz3>9) 
0A6F:  MOVF   4B,W
0A70:  SUBLW  09
0A71:  BTFSS  03.0
....................       umz3 = 0; 
0A72:  CLRF   4B
....................        
....................       // limitação das 23h 
....................       if(dhz3 == 2){ 
0A73:  MOVF   48,W
0A74:  SUBLW  02
0A75:  BTFSS  03.2
0A76:  GOTO   27B
....................       if(uhz3>3) 
0A77:  MOVF   49,W
0A78:  SUBLW  03
0A79:  BTFSS  03.0
....................       uhz3 = 0; 
0A7A:  CLRF   49
....................       } 
....................        
....................           instrucao = 128; 
0A7B:  CLRF   2A
0A7C:  MOVLW  80
0A7D:  MOVWF  29
....................           transfere_inst(instrucao); 
0A7E:  MOVF   29,W
0A7F:  MOVWF  5F
0A80:  BCF    0A.3
0A81:  CALL   084
0A82:  BSF    0A.3
....................           caracter = 'Z'; 
0A83:  CLRF   28
0A84:  MOVLW  5A
0A85:  MOVWF  27
....................           transfere_carac(caracter); 
0A86:  MOVF   27,W
0A87:  MOVWF  5F
0A88:  BCF    0A.3
0A89:  CALL   0CF
0A8A:  BSF    0A.3
....................           caracter = 'o'; 
0A8B:  CLRF   28
0A8C:  MOVLW  6F
0A8D:  MOVWF  27
....................           transfere_carac(caracter); 
0A8E:  MOVF   27,W
0A8F:  MOVWF  5F
0A90:  BCF    0A.3
0A91:  CALL   0CF
0A92:  BSF    0A.3
....................           caracter = 'n'; 
0A93:  CLRF   28
0A94:  MOVLW  6E
0A95:  MOVWF  27
....................           transfere_carac(caracter); 
0A96:  MOVF   27,W
0A97:  MOVWF  5F
0A98:  BCF    0A.3
0A99:  CALL   0CF
0A9A:  BSF    0A.3
....................           caracter = 'a'; 
0A9B:  CLRF   28
0A9C:  MOVLW  61
0A9D:  MOVWF  27
....................           transfere_carac(caracter); 
0A9E:  MOVF   27,W
0A9F:  MOVWF  5F
0AA0:  BCF    0A.3
0AA1:  CALL   0CF
0AA2:  BSF    0A.3
....................           caracter = '1'; 
0AA3:  CLRF   28
0AA4:  MOVLW  31
0AA5:  MOVWF  27
....................           transfere_carac(caracter); 
0AA6:  MOVF   27,W
0AA7:  MOVWF  5F
0AA8:  BCF    0A.3
0AA9:  CALL   0CF
0AAA:  BSF    0A.3
....................        
....................           instrucao = 136; 
0AAB:  CLRF   2A
0AAC:  MOVLW  88
0AAD:  MOVWF  29
....................           transfere_inst(instrucao); 
0AAE:  MOVF   29,W
0AAF:  MOVWF  5F
0AB0:  BCF    0A.3
0AB1:  CALL   084
0AB2:  BSF    0A.3
....................           dhoras = dhz3; 
0AB3:  MOVF   48,W
0AB4:  MOVWF  5B
....................           caracter = dhoras+48; 
0AB5:  MOVLW  30
0AB6:  ADDWF  5B,W
0AB7:  MOVWF  27
0AB8:  CLRF   28
....................           transfere_carac(caracter); 
0AB9:  MOVF   27,W
0ABA:  MOVWF  5F
0ABB:  BCF    0A.3
0ABC:  CALL   0CF
0ABD:  BSF    0A.3
....................           uhoras = uhz3; 
0ABE:  MOVF   49,W
0ABF:  MOVWF  5C
....................           caracter = uhoras+48; 
0AC0:  MOVLW  30
0AC1:  ADDWF  5C,W
0AC2:  MOVWF  27
0AC3:  CLRF   28
....................           transfere_carac(caracter); 
0AC4:  MOVF   27,W
0AC5:  MOVWF  5F
0AC6:  BCF    0A.3
0AC7:  CALL   0CF
0AC8:  BSF    0A.3
....................           caracter = ':'; 
0AC9:  CLRF   28
0ACA:  MOVLW  3A
0ACB:  MOVWF  27
....................           transfere_carac(caracter); 
0ACC:  MOVF   27,W
0ACD:  MOVWF  5F
0ACE:  BCF    0A.3
0ACF:  CALL   0CF
0AD0:  BSF    0A.3
....................           dminutos= dmz3; 
0AD1:  MOVF   4A,W
0AD2:  MOVWF  5D
....................           caracter = dminutos+48; 
0AD3:  MOVLW  30
0AD4:  ADDWF  5D,W
0AD5:  MOVWF  27
0AD6:  CLRF   28
....................           transfere_carac(caracter); 
0AD7:  MOVF   27,W
0AD8:  MOVWF  5F
0AD9:  BCF    0A.3
0ADA:  CALL   0CF
0ADB:  BSF    0A.3
....................           uminutos = umz3; 
0ADC:  MOVF   4B,W
0ADD:  MOVWF  5E
....................           caracter = uminutos+48; 
0ADE:  MOVLW  30
0ADF:  ADDWF  5E,W
0AE0:  MOVWF  27
0AE1:  CLRF   28
....................           transfere_carac(caracter); 
0AE2:  MOVF   27,W
0AE3:  MOVWF  5F
0AE4:  BCF    0A.3
0AE5:  CALL   0CF
0AE6:  BSF    0A.3
....................           instrucao = 192; 
0AE7:  CLRF   2A
0AE8:  MOVLW  C0
0AE9:  MOVWF  29
....................           transfere_inst(instrucao); 
0AEA:  MOVF   29,W
0AEB:  MOVWF  5F
0AEC:  BCF    0A.3
0AED:  CALL   084
0AEE:  BSF    0A.3
....................           caracter = 'T'; 
0AEF:  CLRF   28
0AF0:  MOVLW  54
0AF1:  MOVWF  27
....................           transfere_carac(caracter); 
0AF2:  MOVF   27,W
0AF3:  MOVWF  5F
0AF4:  BCF    0A.3
0AF5:  CALL   0CF
0AF6:  BSF    0A.3
....................           caracter = '_'; 
0AF7:  CLRF   28
0AF8:  MOVLW  5F
0AF9:  MOVWF  27
....................           transfere_carac(caracter); 
0AFA:  MOVF   27,W
0AFB:  MOVWF  5F
0AFC:  BCF    0A.3
0AFD:  CALL   0CF
0AFE:  BSF    0A.3
....................           caracter = 'R'; 
0AFF:  CLRF   28
0B00:  MOVLW  52
0B01:  MOVWF  27
....................           transfere_carac(caracter); 
0B02:  MOVF   27,W
0B03:  MOVWF  5F
0B04:  BCF    0A.3
0B05:  CALL   0CF
0B06:  BSF    0A.3
....................           caracter = 'e'; 
0B07:  CLRF   28
0B08:  MOVLW  65
0B09:  MOVWF  27
....................           transfere_carac(caracter); 
0B0A:  MOVF   27,W
0B0B:  MOVWF  5F
0B0C:  BCF    0A.3
0B0D:  CALL   0CF
0B0E:  BSF    0A.3
....................           caracter = 'g'; 
0B0F:  CLRF   28
0B10:  MOVLW  67
0B11:  MOVWF  27
....................           transfere_carac(caracter); 
0B12:  MOVF   27,W
0B13:  MOVWF  5F
0B14:  BCF    0A.3
0B15:  CALL   0CF
0B16:  BSF    0A.3
....................           caracter = 'a'; 
0B17:  CLRF   28
0B18:  MOVLW  61
0B19:  MOVWF  27
....................           transfere_carac(caracter); 
0B1A:  MOVF   27,W
0B1B:  MOVWF  5F
0B1C:  BCF    0A.3
0B1D:  CALL   0CF
0B1E:  BSF    0A.3
....................           instrucao = 202; 
0B1F:  CLRF   2A
0B20:  MOVLW  CA
0B21:  MOVWF  29
....................           transfere_inst(instrucao); 
0B22:  MOVF   29,W
0B23:  MOVWF  5F
0B24:  BCF    0A.3
0B25:  CALL   084
0B26:  BSF    0A.3
....................           caracter = mintZ3+48; 
0B27:  MOVLW  30
0B28:  ADDWF  50,W
0B29:  MOVWF  27
0B2A:  MOVF   51,W
0B2B:  MOVWF  28
0B2C:  BTFSC  03.0
0B2D:  INCF   28,F
....................           transfere_carac(caracter); 
0B2E:  MOVF   27,W
0B2F:  MOVWF  5F
0B30:  BCF    0A.3
0B31:  CALL   0CF
0B32:  BSF    0A.3
....................          
....................      
....................      
....................     
....................       
....................     ler_tecla(); 
0B33:  BCF    0A.3
0B34:  CALL   173
0B35:  BSF    0A.3
....................    
....................       
....................   }while(tecla!='C' && tecla != 'C' && tecla != 'C' && tecla != 'C');    // fim do while 
0B36:  MOVF   3F,W
0B37:  SUBLW  43
0B38:  BTFSC  03.2
0B39:  GOTO   346
0B3A:  MOVF   3F,W
0B3B:  SUBLW  43
0B3C:  BTFSC  03.2
0B3D:  GOTO   346
0B3E:  MOVF   3F,W
0B3F:  SUBLW  43
0B40:  BTFSC  03.2
0B41:  GOTO   346
0B42:  MOVF   3F,W
0B43:  SUBLW  43
0B44:  BTFSS  03.2
0B45:  GOTO   229
....................     
....................       // As variáveis são guardados nos endereços 
....................       write_eeprom(12,dhz3); // 12 
0B46:  MOVLW  0C
0B47:  BSF    03.6
0B48:  MOVWF  0D
0B49:  BCF    03.6
0B4A:  MOVF   48,W
0B4B:  BSF    03.6
0B4C:  MOVWF  0C
0B4D:  BSF    03.5
0B4E:  BCF    0C.7
0B4F:  BSF    0C.2
0B50:  BCF    03.5
0B51:  BCF    03.6
0B52:  MOVF   0B,W
0B53:  MOVWF  77
0B54:  BCF    0B.7
0B55:  BSF    03.5
0B56:  BSF    03.6
0B57:  MOVLW  55
0B58:  MOVWF  0D
0B59:  MOVLW  AA
0B5A:  MOVWF  0D
0B5B:  BSF    0C.1
0B5C:  BTFSC  0C.1
0B5D:  GOTO   35C
0B5E:  BCF    0C.2
0B5F:  MOVF   77,W
0B60:  BCF    03.5
0B61:  BCF    03.6
0B62:  IORWF  0B,F
....................       write_eeprom(13,uhz3); // 13 
0B63:  MOVLW  0D
0B64:  BSF    03.6
0B65:  MOVWF  0D
0B66:  BCF    03.6
0B67:  MOVF   49,W
0B68:  BSF    03.6
0B69:  MOVWF  0C
0B6A:  BSF    03.5
0B6B:  BCF    0C.7
0B6C:  BSF    0C.2
0B6D:  BCF    03.5
0B6E:  BCF    03.6
0B6F:  MOVF   0B,W
0B70:  MOVWF  77
0B71:  BCF    0B.7
0B72:  BSF    03.5
0B73:  BSF    03.6
0B74:  MOVLW  55
0B75:  MOVWF  0D
0B76:  MOVLW  AA
0B77:  MOVWF  0D
0B78:  BSF    0C.1
0B79:  BTFSC  0C.1
0B7A:  GOTO   379
0B7B:  BCF    0C.2
0B7C:  MOVF   77,W
0B7D:  BCF    03.5
0B7E:  BCF    03.6
0B7F:  IORWF  0B,F
....................       write_eeprom(14,dmz3); // 14 
0B80:  MOVLW  0E
0B81:  BSF    03.6
0B82:  MOVWF  0D
0B83:  BCF    03.6
0B84:  MOVF   4A,W
0B85:  BSF    03.6
0B86:  MOVWF  0C
0B87:  BSF    03.5
0B88:  BCF    0C.7
0B89:  BSF    0C.2
0B8A:  BCF    03.5
0B8B:  BCF    03.6
0B8C:  MOVF   0B,W
0B8D:  MOVWF  77
0B8E:  BCF    0B.7
0B8F:  BSF    03.5
0B90:  BSF    03.6
0B91:  MOVLW  55
0B92:  MOVWF  0D
0B93:  MOVLW  AA
0B94:  MOVWF  0D
0B95:  BSF    0C.1
0B96:  BTFSC  0C.1
0B97:  GOTO   396
0B98:  BCF    0C.2
0B99:  MOVF   77,W
0B9A:  BCF    03.5
0B9B:  BCF    03.6
0B9C:  IORWF  0B,F
....................       write_eeprom(15,umz3); // 15 
0B9D:  MOVLW  0F
0B9E:  BSF    03.6
0B9F:  MOVWF  0D
0BA0:  BCF    03.6
0BA1:  MOVF   4B,W
0BA2:  BSF    03.6
0BA3:  MOVWF  0C
0BA4:  BSF    03.5
0BA5:  BCF    0C.7
0BA6:  BSF    0C.2
0BA7:  BCF    03.5
0BA8:  BCF    03.6
0BA9:  MOVF   0B,W
0BAA:  MOVWF  77
0BAB:  BCF    0B.7
0BAC:  BSF    03.5
0BAD:  BSF    03.6
0BAE:  MOVLW  55
0BAF:  MOVWF  0D
0BB0:  MOVLW  AA
0BB1:  MOVWF  0D
0BB2:  BSF    0C.1
0BB3:  BTFSC  0C.1
0BB4:  GOTO   3B3
0BB5:  BCF    0C.2
0BB6:  MOVF   77,W
0BB7:  BCF    03.5
0BB8:  BCF    03.6
0BB9:  IORWF  0B,F
....................     
....................     
....................                                     // Tempo de rega para Zona 3 
....................      do{ 
....................           instrucao = 192; 
0BBA:  CLRF   2A
0BBB:  MOVLW  C0
0BBC:  MOVWF  29
....................           transfere_inst(instrucao); 
0BBD:  MOVF   29,W
0BBE:  MOVWF  5F
0BBF:  BCF    0A.3
0BC0:  CALL   084
0BC1:  BSF    0A.3
....................           caracter = 'T'; 
0BC2:  CLRF   28
0BC3:  MOVLW  54
0BC4:  MOVWF  27
....................           transfere_carac(caracter); 
0BC5:  MOVF   27,W
0BC6:  MOVWF  5F
0BC7:  BCF    0A.3
0BC8:  CALL   0CF
0BC9:  BSF    0A.3
....................           caracter = '_'; 
0BCA:  CLRF   28
0BCB:  MOVLW  5F
0BCC:  MOVWF  27
....................           transfere_carac(caracter); 
0BCD:  MOVF   27,W
0BCE:  MOVWF  5F
0BCF:  BCF    0A.3
0BD0:  CALL   0CF
0BD1:  BSF    0A.3
....................           caracter = 'R'; 
0BD2:  CLRF   28
0BD3:  MOVLW  52
0BD4:  MOVWF  27
....................           transfere_carac(caracter); 
0BD5:  MOVF   27,W
0BD6:  MOVWF  5F
0BD7:  BCF    0A.3
0BD8:  CALL   0CF
0BD9:  BSF    0A.3
....................           caracter = 'e'; 
0BDA:  CLRF   28
0BDB:  MOVLW  65
0BDC:  MOVWF  27
....................           transfere_carac(caracter); 
0BDD:  MOVF   27,W
0BDE:  MOVWF  5F
0BDF:  BCF    0A.3
0BE0:  CALL   0CF
0BE1:  BSF    0A.3
....................           caracter = 'g'; 
0BE2:  CLRF   28
0BE3:  MOVLW  67
0BE4:  MOVWF  27
....................           transfere_carac(caracter); 
0BE5:  MOVF   27,W
0BE6:  MOVWF  5F
0BE7:  BCF    0A.3
0BE8:  CALL   0CF
0BE9:  BSF    0A.3
....................           caracter = 'a'; 
0BEA:  CLRF   28
0BEB:  MOVLW  61
0BEC:  MOVWF  27
....................           transfere_carac(caracter); 
0BED:  MOVF   27,W
0BEE:  MOVWF  5F
0BEF:  BCF    0A.3
0BF0:  CALL   0CF
0BF1:  BSF    0A.3
....................           instrucao = 202; 
0BF2:  CLRF   2A
0BF3:  MOVLW  CA
0BF4:  MOVWF  29
....................           transfere_inst(instrucao); 
0BF5:  MOVF   29,W
0BF6:  MOVWF  5F
0BF7:  BCF    0A.3
0BF8:  CALL   084
0BF9:  BSF    0A.3
....................      
....................     if(input(pin_C0)== 1){ 
0BFA:  BSF    56.0
0BFB:  MOVF   56,W
0BFC:  BSF    03.5
0BFD:  MOVWF  07
0BFE:  BCF    03.5
0BFF:  BTFSS  07.0
0C00:  GOTO   409
....................       delay_ms(100); 
0C01:  MOVLW  64
0C02:  MOVWF  60
0C03:  BCF    0A.3
0C04:  CALL   064
0C05:  BSF    0A.3
....................       mintZ3 ++; 
0C06:  INCF   50,F
0C07:  BTFSC  03.2
0C08:  INCF   51,F
....................       } 
....................           
....................       if(mintZ3 > 9){ 
0C09:  MOVF   51,F
0C0A:  BTFSS  03.2
0C0B:  GOTO   410
0C0C:  MOVF   50,W
0C0D:  SUBLW  09
0C0E:  BTFSC  03.0
0C0F:  GOTO   412
....................       mintZ3 = 0; 
0C10:  CLRF   51
0C11:  CLRF   50
....................       } 
....................  
....................           caracter = mintZ3+48; 
0C12:  MOVLW  30
0C13:  ADDWF  50,W
0C14:  MOVWF  27
0C15:  MOVF   51,W
0C16:  MOVWF  28
0C17:  BTFSC  03.0
0C18:  INCF   28,F
....................           transfere_carac(caracter); 
0C19:  MOVF   27,W
0C1A:  MOVWF  5F
0C1B:  BCF    0A.3
0C1C:  CALL   0CF
0C1D:  BSF    0A.3
....................              
....................       
....................     ler_tecla(); 
0C1E:  BCF    0A.3
0C1F:  CALL   173
0C20:  BSF    0A.3
....................    
....................       
....................   }while(tecla!='C' && tecla != 'C' && tecla != 'C' && tecla != 'C');    // fim do while 
0C21:  MOVF   3F,W
0C22:  SUBLW  43
0C23:  BTFSC  03.2
0C24:  GOTO   431
0C25:  MOVF   3F,W
0C26:  SUBLW  43
0C27:  BTFSC  03.2
0C28:  GOTO   431
0C29:  MOVF   3F,W
0C2A:  SUBLW  43
0C2B:  BTFSC  03.2
0C2C:  GOTO   431
0C2D:  MOVF   3F,W
0C2E:  SUBLW  43
0C2F:  BTFSS  03.2
0C30:  GOTO   3BA
....................    
....................   write_eeprom(16,mintZ3); // Variável mintZ1 é guardado no endereço 16 
0C31:  MOVLW  10
0C32:  BSF    03.6
0C33:  MOVWF  0D
0C34:  BCF    03.6
0C35:  MOVF   50,W
0C36:  BSF    03.6
0C37:  MOVWF  0C
0C38:  BSF    03.5
0C39:  BCF    0C.7
0C3A:  BSF    0C.2
0C3B:  BCF    03.5
0C3C:  BCF    03.6
0C3D:  MOVF   0B,W
0C3E:  MOVWF  77
0C3F:  BCF    0B.7
0C40:  BSF    03.5
0C41:  BSF    03.6
0C42:  MOVLW  55
0C43:  MOVWF  0D
0C44:  MOVLW  AA
0C45:  MOVWF  0D
0C46:  BSF    0C.1
0C47:  BTFSC  0C.1
0C48:  GOTO   447
0C49:  BCF    0C.2
0C4A:  MOVF   77,W
0C4B:  BCF    03.5
0C4C:  BCF    03.6
0C4D:  IORWF  0B,F
.................... }//fim da função def_hrega da zona 3 
0C4E:  BSF    0A.3
0C4F:  BCF    0A.4
0C50:  GOTO   604 (RETURN)
....................  
....................  
....................  
.................... // ler teclado 
....................  
....................  void ler_tecla() 
.................... { 
....................  
....................   tecla='#'; // inicialização de ler tecla 
*
0173:  MOVLW  23
0174:  MOVWF  3F
....................  
....................   output_low(pin_b0); 
0175:  BSF    03.5
0176:  BCF    06.0
0177:  BCF    03.5
0178:  BCF    06.0
....................   output_high(pin_b1); 
0179:  BSF    03.5
017A:  BCF    06.1
017B:  BCF    03.5
017C:  BSF    06.1
....................   output_high(pin_b2); 
017D:  BSF    03.5
017E:  BCF    06.2
017F:  BCF    03.5
0180:  BSF    06.2
....................   output_high(pin_b3); 
0181:  BSF    03.5
0182:  BCF    06.3
0183:  BCF    03.5
0184:  BSF    06.3
....................  
....................   while((input(pin_b4)==0) && (input(pin_b4)==0) && (input(pin_b4)==0)){ 
0185:  BSF    03.5
0186:  BSF    06.4
0187:  BCF    03.5
0188:  BTFSC  06.4
0189:  GOTO   197
018A:  BSF    03.5
018B:  BSF    06.4
018C:  BCF    03.5
018D:  BTFSC  06.4
018E:  GOTO   197
018F:  BSF    03.5
0190:  BSF    06.4
0191:  BCF    03.5
0192:  BTFSC  06.4
0193:  GOTO   197
....................    tecla='1'; 
0194:  MOVLW  31
0195:  MOVWF  3F
....................    } 
0196:  GOTO   185
....................  
....................   while((input(pin_b5)==0) && (input(pin_b5)==0) && (input(pin_b5)==0)){ 
0197:  BSF    03.5
0198:  BSF    06.5
0199:  BCF    03.5
019A:  BTFSC  06.5
019B:  GOTO   1A9
019C:  BSF    03.5
019D:  BSF    06.5
019E:  BCF    03.5
019F:  BTFSC  06.5
01A0:  GOTO   1A9
01A1:  BSF    03.5
01A2:  BSF    06.5
01A3:  BCF    03.5
01A4:  BTFSC  06.5
01A5:  GOTO   1A9
....................    tecla='2'; 
01A6:  MOVLW  32
01A7:  MOVWF  3F
....................    } 
01A8:  GOTO   197
....................  
....................   while((input(pin_b6)==0) && (input(pin_b6)==0) && (input(pin_b6)==0)){ 
01A9:  BSF    03.5
01AA:  BSF    06.6
01AB:  BCF    03.5
01AC:  BTFSC  06.6
01AD:  GOTO   1BB
01AE:  BSF    03.5
01AF:  BSF    06.6
01B0:  BCF    03.5
01B1:  BTFSC  06.6
01B2:  GOTO   1BB
01B3:  BSF    03.5
01B4:  BSF    06.6
01B5:  BCF    03.5
01B6:  BTFSC  06.6
01B7:  GOTO   1BB
....................    tecla='3'; 
01B8:  MOVLW  33
01B9:  MOVWF  3F
....................  
....................    } 
01BA:  GOTO   1A9
....................  
....................   while((input(pin_b7)==0) && (input(pin_b7)==0) && (input(pin_b7)==0)){ 
01BB:  BSF    03.5
01BC:  BSF    06.7
01BD:  BCF    03.5
01BE:  BTFSC  06.7
01BF:  GOTO   1CD
01C0:  BSF    03.5
01C1:  BSF    06.7
01C2:  BCF    03.5
01C3:  BTFSC  06.7
01C4:  GOTO   1CD
01C5:  BSF    03.5
01C6:  BSF    06.7
01C7:  BCF    03.5
01C8:  BTFSC  06.7
01C9:  GOTO   1CD
....................    tecla='F'; 
01CA:  MOVLW  46
01CB:  MOVWF  3F
....................    } 
01CC:  GOTO   1BB
....................  
....................   output_high(pin_b0); 
01CD:  BSF    03.5
01CE:  BCF    06.0
01CF:  BCF    03.5
01D0:  BSF    06.0
....................   output_low(pin_b1); 
01D1:  BSF    03.5
01D2:  BCF    06.1
01D3:  BCF    03.5
01D4:  BCF    06.1
....................   output_high(pin_b2); 
01D5:  BSF    03.5
01D6:  BCF    06.2
01D7:  BCF    03.5
01D8:  BSF    06.2
....................   output_high(pin_b3); 
01D9:  BSF    03.5
01DA:  BCF    06.3
01DB:  BCF    03.5
01DC:  BSF    06.3
....................  
....................   while((input(pin_b4)==0) && (input(pin_b4)==0) && (input(pin_b4)==0)){ 
01DD:  BSF    03.5
01DE:  BSF    06.4
01DF:  BCF    03.5
01E0:  BTFSC  06.4
01E1:  GOTO   1EF
01E2:  BSF    03.5
01E3:  BSF    06.4
01E4:  BCF    03.5
01E5:  BTFSC  06.4
01E6:  GOTO   1EF
01E7:  BSF    03.5
01E8:  BSF    06.4
01E9:  BCF    03.5
01EA:  BTFSC  06.4
01EB:  GOTO   1EF
....................    tecla='4'; 
01EC:  MOVLW  34
01ED:  MOVWF  3F
....................    } 
01EE:  GOTO   1DD
....................  
....................   while((input(pin_b5)==0) && (input(pin_b5)==0) && (input(pin_b5)==0)){ 
01EF:  BSF    03.5
01F0:  BSF    06.5
01F1:  BCF    03.5
01F2:  BTFSC  06.5
01F3:  GOTO   201
01F4:  BSF    03.5
01F5:  BSF    06.5
01F6:  BCF    03.5
01F7:  BTFSC  06.5
01F8:  GOTO   201
01F9:  BSF    03.5
01FA:  BSF    06.5
01FB:  BCF    03.5
01FC:  BTFSC  06.5
01FD:  GOTO   201
....................    tecla='5'; 
01FE:  MOVLW  35
01FF:  MOVWF  3F
....................    } 
0200:  GOTO   1EF
....................  
....................   while((input(pin_b6)==0) && (input(pin_b6)==0) && (input(pin_b6)==0)){ 
0201:  BSF    03.5
0202:  BSF    06.6
0203:  BCF    03.5
0204:  BTFSC  06.6
0205:  GOTO   213
0206:  BSF    03.5
0207:  BSF    06.6
0208:  BCF    03.5
0209:  BTFSC  06.6
020A:  GOTO   213
020B:  BSF    03.5
020C:  BSF    06.6
020D:  BCF    03.5
020E:  BTFSC  06.6
020F:  GOTO   213
....................    tecla='6'; 
0210:  MOVLW  36
0211:  MOVWF  3F
....................     } 
0212:  GOTO   201
....................  
....................   while((input(pin_b7)==0) && (input(pin_b7)==0) && (input(pin_b7)==0)){ 
0213:  BSF    03.5
0214:  BSF    06.7
0215:  BCF    03.5
0216:  BTFSC  06.7
0217:  GOTO   225
0218:  BSF    03.5
0219:  BSF    06.7
021A:  BCF    03.5
021B:  BTFSC  06.7
021C:  GOTO   225
021D:  BSF    03.5
021E:  BSF    06.7
021F:  BCF    03.5
0220:  BTFSC  06.7
0221:  GOTO   225
....................    tecla='E'; 
0222:  MOVLW  45
0223:  MOVWF  3F
....................     } 
0224:  GOTO   213
....................  
....................  
....................   output_high(pin_b0); 
0225:  BSF    03.5
0226:  BCF    06.0
0227:  BCF    03.5
0228:  BSF    06.0
....................   output_high(pin_b1); 
0229:  BSF    03.5
022A:  BCF    06.1
022B:  BCF    03.5
022C:  BSF    06.1
....................   output_low(pin_b2); 
022D:  BSF    03.5
022E:  BCF    06.2
022F:  BCF    03.5
0230:  BCF    06.2
....................   output_high(pin_b3); 
0231:  BSF    03.5
0232:  BCF    06.3
0233:  BCF    03.5
0234:  BSF    06.3
....................  
....................  
....................   while((input(pin_b4)==0) && (input(pin_b4)==0) && (input(pin_b4)==0)){ 
0235:  BSF    03.5
0236:  BSF    06.4
0237:  BCF    03.5
0238:  BTFSC  06.4
0239:  GOTO   247
023A:  BSF    03.5
023B:  BSF    06.4
023C:  BCF    03.5
023D:  BTFSC  06.4
023E:  GOTO   247
023F:  BSF    03.5
0240:  BSF    06.4
0241:  BCF    03.5
0242:  BTFSC  06.4
0243:  GOTO   247
....................    tecla='7'; 
0244:  MOVLW  37
0245:  MOVWF  3F
....................    } 
0246:  GOTO   235
....................  
....................    while((input(pin_b5)==0) && (input(pin_b5)==0) && (input(pin_b5)==0)){ 
0247:  BSF    03.5
0248:  BSF    06.5
0249:  BCF    03.5
024A:  BTFSC  06.5
024B:  GOTO   259
024C:  BSF    03.5
024D:  BSF    06.5
024E:  BCF    03.5
024F:  BTFSC  06.5
0250:  GOTO   259
0251:  BSF    03.5
0252:  BSF    06.5
0253:  BCF    03.5
0254:  BTFSC  06.5
0255:  GOTO   259
....................    tecla='8'; 
0256:  MOVLW  38
0257:  MOVWF  3F
....................    } 
0258:  GOTO   247
....................  
....................    while((input(pin_b6)==0) && (input(pin_b6)==0) && (input(pin_b6)==0)){ 
0259:  BSF    03.5
025A:  BSF    06.6
025B:  BCF    03.5
025C:  BTFSC  06.6
025D:  GOTO   26B
025E:  BSF    03.5
025F:  BSF    06.6
0260:  BCF    03.5
0261:  BTFSC  06.6
0262:  GOTO   26B
0263:  BSF    03.5
0264:  BSF    06.6
0265:  BCF    03.5
0266:  BTFSC  06.6
0267:  GOTO   26B
....................    tecla='9'; 
0268:  MOVLW  39
0269:  MOVWF  3F
....................    } 
026A:  GOTO   259
....................  
....................    while((input(pin_b7)==0) && (input(pin_b7)==0) && (input(pin_b7)==0)){ 
026B:  BSF    03.5
026C:  BSF    06.7
026D:  BCF    03.5
026E:  BTFSC  06.7
026F:  GOTO   27D
0270:  BSF    03.5
0271:  BSF    06.7
0272:  BCF    03.5
0273:  BTFSC  06.7
0274:  GOTO   27D
0275:  BSF    03.5
0276:  BSF    06.7
0277:  BCF    03.5
0278:  BTFSC  06.7
0279:  GOTO   27D
....................    tecla='D'; 
027A:  MOVLW  44
027B:  MOVWF  3F
....................    } 
027C:  GOTO   26B
....................  
....................  
....................   output_high(pin_b0); 
027D:  BSF    03.5
027E:  BCF    06.0
027F:  BCF    03.5
0280:  BSF    06.0
....................   output_high(pin_b1); 
0281:  BSF    03.5
0282:  BCF    06.1
0283:  BCF    03.5
0284:  BSF    06.1
....................   output_high(pin_b2); 
0285:  BSF    03.5
0286:  BCF    06.2
0287:  BCF    03.5
0288:  BSF    06.2
....................   output_low(pin_b3); 
0289:  BSF    03.5
028A:  BCF    06.3
028B:  BCF    03.5
028C:  BCF    06.3
....................  
....................   while((input(pin_b4)==0) && (input(pin_b4)==0) && (input(pin_b4)==0)){ 
028D:  BSF    03.5
028E:  BSF    06.4
028F:  BCF    03.5
0290:  BTFSC  06.4
0291:  GOTO   29F
0292:  BSF    03.5
0293:  BSF    06.4
0294:  BCF    03.5
0295:  BTFSC  06.4
0296:  GOTO   29F
0297:  BSF    03.5
0298:  BSF    06.4
0299:  BCF    03.5
029A:  BTFSC  06.4
029B:  GOTO   29F
....................    tecla='A'; 
029C:  MOVLW  41
029D:  MOVWF  3F
....................    } 
029E:  GOTO   28D
....................  
....................   while((input(pin_b5)==0) && (input(pin_b5)==0) && (input(pin_b5)==0)){ 
029F:  BSF    03.5
02A0:  BSF    06.5
02A1:  BCF    03.5
02A2:  BTFSC  06.5
02A3:  GOTO   2B1
02A4:  BSF    03.5
02A5:  BSF    06.5
02A6:  BCF    03.5
02A7:  BTFSC  06.5
02A8:  GOTO   2B1
02A9:  BSF    03.5
02AA:  BSF    06.5
02AB:  BCF    03.5
02AC:  BTFSC  06.5
02AD:  GOTO   2B1
....................    tecla='0'; 
02AE:  MOVLW  30
02AF:  MOVWF  3F
....................    } 
02B0:  GOTO   29F
....................  
....................   while((input(pin_b6)==0) && (input(pin_b6)==0) && (input(pin_b6)==0)){ 
02B1:  BSF    03.5
02B2:  BSF    06.6
02B3:  BCF    03.5
02B4:  BTFSC  06.6
02B5:  GOTO   2C3
02B6:  BSF    03.5
02B7:  BSF    06.6
02B8:  BCF    03.5
02B9:  BTFSC  06.6
02BA:  GOTO   2C3
02BB:  BSF    03.5
02BC:  BSF    06.6
02BD:  BCF    03.5
02BE:  BTFSC  06.6
02BF:  GOTO   2C3
....................    tecla='B'; 
02C0:  MOVLW  42
02C1:  MOVWF  3F
....................    } 
02C2:  GOTO   2B1
....................  
....................   while((input(pin_b7)==0) && (input(pin_b7)==0) && (input(pin_b7)==0)){ 
02C3:  BSF    03.5
02C4:  BSF    06.7
02C5:  BCF    03.5
02C6:  BTFSC  06.7
02C7:  GOTO   2D5
02C8:  BSF    03.5
02C9:  BSF    06.7
02CA:  BCF    03.5
02CB:  BTFSC  06.7
02CC:  GOTO   2D5
02CD:  BSF    03.5
02CE:  BSF    06.7
02CF:  BCF    03.5
02D0:  BTFSC  06.7
02D1:  GOTO   2D5
....................    tecla='C'; 
02D2:  MOVLW  43
02D3:  MOVWF  3F
....................    } 
02D4:  GOTO   2C3
....................  
....................  
....................  
....................  }//fim da função ler_tecla 
02D5:  RETURN
....................   

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
